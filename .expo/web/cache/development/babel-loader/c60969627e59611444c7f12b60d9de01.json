{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nvar _jsxFileName = \"/Users/valiant.lamban/Downloads/karosa-native/src/screens/user-account/my-address/index.tsx\";\nimport React, { useCallback, useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { MaterialIcons } from \"@expo/vector-icons\";\nimport { useMemoizedSelector } from \"../../../hooks\";\nimport { actions, selectors } from \"../../../redux/auth\";\nimport { Screen } from \"../../../components/base-screen\";\nimport { AddressList } from \"../../../components/list/list-display\";\nimport { BaseText } from \"../../../components/base-text\";\nimport routes from \"../../../navigators/routes\";\nimport { styles } from \"./styles\";\n\nvar MyAddressScreen = function MyAddressScreen() {\n  var _useNavigation = useNavigation(),\n      goBack = _useNavigation.goBack,\n      navigate = _useNavigation.navigate;\n\n  var dispatch = useDispatch();\n  var getAddress = useCallback(function () {\n    return dispatch(actions.callMyAddressApi.request());\n  }, [dispatch]);\n  useEffect(function () {\n    getAddress();\n  }, []);\n  var addressResponse = useMemoizedSelector(selectors.getMyAddressResponse);\n  var headerProps = {\n    header: {\n      iconName: \"arrow-back\",\n      title: \"My Addresses\",\n      press: {\n        left: function left() {\n          return goBack();\n        }\n      }\n    }\n  };\n  return React.createElement(Screen, _extends({}, headerProps, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }\n  }), React.createElement(View, {\n    style: styles.addressContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, addressResponse && addressResponse.map(function (value, index) {\n    return React.createElement(AddressList, {\n      key: index,\n      address: {\n        name: value.name,\n        phoneNumber: value.phoneNumber,\n        barangayId: value.barangayId,\n        detailedAddress: value.detailedAddress,\n        default: value.isDefaultAddress\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }\n    });\n  })), React.createElement(TouchableWithoutFeedback, {\n    onPress: function onPress() {\n      return navigate(routes.ACCOUNTS_NEW_ADDRESS);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: styles.touchable,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }, React.createElement(BaseText, {\n    style: styles.txtnewAdd,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 11\n    }\n  }, \"Add New Address\"), React.createElement(View, {\n    style: styles.forIcon,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 11\n    }\n  }, React.createElement(MaterialIcons, {\n    name: \"add\",\n    size: 25,\n    style: styles.materialColor,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }\n  })))));\n};\n\nexport default MyAddressScreen;","map":{"version":3,"sources":["/Users/valiant.lamban/Downloads/karosa-native/src/screens/user-account/my-address/index.tsx"],"names":["React","useCallback","useEffect","useDispatch","useNavigation","MaterialIcons","useMemoizedSelector","actions","selectors","Screen","AddressList","BaseText","routes","styles","MyAddressScreen","goBack","navigate","dispatch","getAddress","callMyAddressApi","request","addressResponse","getMyAddressResponse","headerProps","header","iconName","title","press","left","addressContainer","map","value","index","name","phoneNumber","barangayId","detailedAddress","default","isDefaultAddress","ACCOUNTS_NEW_ADDRESS","touchable","txtnewAdd","forIcon","materialColor"],"mappings":"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","sourcesContent":["import React, { useCallback, useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { View, TouchableWithoutFeedback } from \"react-native\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { MaterialIcons } from \"@expo/vector-icons\";\nimport { useMemoizedSelector } from \"@app/hooks\";\nimport { actions, selectors } from \"@app/redux/auth\";\nimport { Props as HeaderProps } from \"@app/components/base-screen/types\";\nimport { Screen } from \"@app/components/base-screen\";\nimport { AddressList } from \"@app/components/list/list-display\";\nimport { BaseText } from \"@app/components/base-text\";\nimport routes from \"@app/navigators/routes\";\n\nimport { styles } from \"./styles\";\n\n\nconst MyAddressScreen: React.FC = () => {\n  const { goBack, navigate } = useNavigation();\n  const dispatch = useDispatch();\n\n  const getAddress = useCallback(\n    () => dispatch(actions.callMyAddressApi.request()),\n    [dispatch]\n  );\n\n  useEffect(() => {\n    getAddress();\n  }, []);\n\n  const addressResponse = useMemoizedSelector(selectors.getMyAddressResponse);\n  const headerProps: HeaderProps = {\n    header: {\n      iconName: \"arrow-back\",\n      title: \"My Addresses\",\n      press: {\n        left: () => goBack(),\n      },\n    },\n  };\n\n  return (\n    <Screen {...headerProps}>\n      <View style={styles.addressContainer}>\n        {addressResponse &&\n          addressResponse.map((value, index) => (\n            <AddressList\n              key={index}\n              address={{\n                name: value.name,\n                phoneNumber: value.phoneNumber,\n                barangayId: value.barangayId,\n                detailedAddress: value.detailedAddress,\n                default: value.isDefaultAddress,\n              }}\n            />\n          ))}\n      </View>\n      <TouchableWithoutFeedback\n        onPress={() => navigate(routes.ACCOUNTS_NEW_ADDRESS)}\n      >\n        <View style={styles.touchable}>\n          <BaseText style={styles.txtnewAdd}>Add New Address</BaseText>\n          <View style={styles.forIcon}>\n            <MaterialIcons name=\"add\" size={25} style={styles.materialColor} />\n          </View>\n        </View>\n      </TouchableWithoutFeedback>\n    </Screen>\n  );\n};\n\nexport default MyAddressScreen;\n"]},"metadata":{},"sourceType":"module"}