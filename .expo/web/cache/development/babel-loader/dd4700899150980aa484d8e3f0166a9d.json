{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/valiant.lamban/Downloads/karosa-native/src/components/load-assets/index.tsx\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { AppLoading } from \"expo\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { SafeAreaProvider } from \"react-native-safe-area-context\";\nimport AsyncStorage from \"@react-native-community/async-storage\";\nimport Constants from \"expo-constants\";\nimport { useLoadAssets } from \"../../hooks\";\nvar NAVIGATION_STATE_KEY = \"NAVIGATION_STATE_KEY-\" + Constants.manifest.sdkVersion;\n\nvar LoadAssets = function LoadAssets(_ref) {\n  var assets = _ref.assets,\n      fonts = _ref.fonts,\n      children = _ref.children;\n\n  var _useState = useState(!__DEV__),\n      _useState2 = _slicedToArray(_useState, 2),\n      isNavigationReady = _useState2[0],\n      setIsNavigationReady = _useState2[1];\n\n  var _useState3 = useState(),\n      _useState4 = _slicedToArray(_useState3, 2),\n      initialState = _useState4[0],\n      setInitialState = _useState4[1];\n\n  var ready = useLoadAssets(assets || [], fonts || {});\n  useEffect(function () {\n    var restoreState = function restoreState() {\n      var savedStateString, state;\n      return _regeneratorRuntime.async(function restoreState$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem(NAVIGATION_STATE_KEY));\n\n            case 3:\n              savedStateString = _context.sent;\n              state = savedStateString ? JSON.parse(savedStateString) : undefined;\n              setInitialState(state);\n\n            case 6:\n              _context.prev = 6;\n              setIsNavigationReady(true);\n              return _context.finish(6);\n\n            case 9:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[0,, 6, 9]], Promise);\n    };\n\n    if (!isNavigationReady) {\n      restoreState();\n    }\n  }, [isNavigationReady]);\n  var onStateChange = useCallback(function (state) {\n    return AsyncStorage.setItem(NAVIGATION_STATE_KEY, JSON.stringify(state));\n  }, []);\n\n  if (!ready || !isNavigationReady) {\n    return React.createElement(AppLoading, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 12\n      }\n    });\n  }\n\n  return React.createElement(SafeAreaProvider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }\n  }, React.createElement(NavigationContainer, _extends({\n    onStateChange: onStateChange,\n    initialState: initialState\n  }, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }), children));\n};\n\nexport default LoadAssets;","map":{"version":3,"sources":["/Users/valiant.lamban/Downloads/karosa-native/src/components/load-assets/index.tsx"],"names":["React","useCallback","useEffect","useState","AppLoading","NavigationContainer","SafeAreaProvider","AsyncStorage","Constants","useLoadAssets","NAVIGATION_STATE_KEY","manifest","sdkVersion","LoadAssets","assets","fonts","children","__DEV__","isNavigationReady","setIsNavigationReady","initialState","setInitialState","ready","restoreState","getItem","savedStateString","state","JSON","parse","undefined","onStateChange","setItem","stringify"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,WAAhB,EAA6BC,SAA7B,EAAwCC,QAAxC,QAAwD,OAAxD;AACA,SAASC,UAAT,QAA2B,MAA3B;AACA,SAAuBC,mBAAvB,QAAkD,0BAAlD;AACA,SAASC,gBAAT,QAAiC,gCAAjC;AACA,OAAOC,YAAP,MAAyB,uCAAzB;AACA,OAAOC,SAAP,MAAsB,gBAAtB;AACA,SAASC,aAAT;AAIA,IAAMC,oBAAoB,6BAA2BF,SAAS,CAACG,QAAV,CAAmBC,UAAxE;;AAEA,IAAMC,UAA2B,GAAG,SAA9BA,UAA8B,OAAiC;AAAA,MAA9BC,MAA8B,QAA9BA,MAA8B;AAAA,MAAtBC,KAAsB,QAAtBA,KAAsB;AAAA,MAAfC,QAAe,QAAfA,QAAe;;AAAA,kBACjBb,QAAQ,CAAC,CAACc,OAAF,CADS;AAAA;AAAA,MAC5DC,iBAD4D;AAAA,MACzCC,oBADyC;;AAAA,mBAG3BhB,QAAQ,EAHmB;AAAA;AAAA,MAG5DiB,YAH4D;AAAA,MAG9CC,eAH8C;;AAKnE,MAAMC,KAAK,GAAGb,aAAa,CAACK,MAAM,IAAI,EAAX,EAAeC,KAAK,IAAI,EAAxB,CAA3B;AAEAb,EAAAA,SAAS,CAAC,YAAM;AACd,QAAMqB,YAAY,GAAG,SAAfA,YAAe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CAEchB,YAAY,CAACiB,OAAb,CAC7Bd,oBAD6B,CAFd;;AAAA;AAEXe,cAAAA,gBAFW;AAMXC,cAAAA,KANW,GAMHD,gBAAgB,GAC1BE,IAAI,CAACC,KAAL,CAAWH,gBAAX,CAD0B,GAE1BI,SARa;AAUjBR,cAAAA,eAAe,CAACK,KAAD,CAAf;;AAViB;AAAA;AAYjBP,cAAAA,oBAAoB,CAAC,IAAD,CAApB;AAZiB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAArB;;AAgBA,QAAI,CAACD,iBAAL,EAAwB;AACtBK,MAAAA,YAAY;AACb;AACF,GApBQ,EAoBN,CAACL,iBAAD,CApBM,CAAT;AAsBA,MAAMY,aAAa,GAAG7B,WAAW,CAC/B,UAACyB,KAAD;AAAA,WACEnB,YAAY,CAACwB,OAAb,CAAqBrB,oBAArB,EAA2CiB,IAAI,CAACK,SAAL,CAAeN,KAAf,CAA3C,CADF;AAAA,GAD+B,EAI/B,EAJ+B,CAAjC;;AAOA,MAAI,CAACJ,KAAD,IAAU,CAACJ,iBAAf,EAAkC;AAChC,WAAO,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD;;AAED,SACE,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,mBAAD,WAAyB;AAAEY,IAAAA,aAAa,EAAbA,aAAF;AAAiBV,IAAAA,YAAY,EAAZA;AAAjB,GAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACGJ,QADH,CADF,CADF;AAOD,CA/CD;;AAiDA,eAAeH,UAAf","sourcesContent":["import React, { useCallback, useEffect, useState } from \"react\";\r\nimport { AppLoading } from \"expo\";\r\nimport { InitialState, NavigationContainer } from \"@react-navigation/native\";\r\nimport { SafeAreaProvider } from \"react-native-safe-area-context\";\r\nimport AsyncStorage from \"@react-native-community/async-storage\";\r\nimport Constants from \"expo-constants\";\r\nimport { useLoadAssets } from \"@app/hooks\";\r\n\r\nimport { Props } from \"./types\";\r\n\r\nconst NAVIGATION_STATE_KEY = `NAVIGATION_STATE_KEY-${Constants.manifest.sdkVersion}`;\r\n\r\nconst LoadAssets: React.FC<Props> = ({ assets, fonts, children }) => {\r\n  const [isNavigationReady, setIsNavigationReady] = useState(!__DEV__);\r\n\r\n  const [initialState, setInitialState] = useState<InitialState | undefined>();\r\n\r\n  const ready = useLoadAssets(assets || [], fonts || {});\r\n\r\n  useEffect(() => {\r\n    const restoreState = async () => {\r\n      try {\r\n        const savedStateString = await AsyncStorage.getItem(\r\n          NAVIGATION_STATE_KEY\r\n        );\r\n\r\n        const state = savedStateString\r\n          ? JSON.parse(savedStateString)\r\n          : undefined;\r\n\r\n        setInitialState(state);\r\n      } finally {\r\n        setIsNavigationReady(true);\r\n      }\r\n    };\r\n\r\n    if (!isNavigationReady) {\r\n      restoreState();\r\n    }\r\n  }, [isNavigationReady]);\r\n\r\n  const onStateChange = useCallback(\r\n    (state) =>\r\n      AsyncStorage.setItem(NAVIGATION_STATE_KEY, JSON.stringify(state)),\r\n\r\n    []\r\n  );\r\n\r\n  if (!ready || !isNavigationReady) {\r\n    return <AppLoading />;\r\n  }\r\n\r\n  return (\r\n    <SafeAreaProvider>\r\n      <NavigationContainer {...{ onStateChange, initialState }}>\r\n        {children}\r\n      </NavigationContainer>\r\n    </SafeAreaProvider>\r\n  );\r\n};\r\n\r\nexport default LoadAssets;\r\n"]},"metadata":{},"sourceType":"module"}