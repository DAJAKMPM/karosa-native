{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nvar _jsxFileName = \"/Users/valiant.lamban/Downloads/karosa-native/src/components/base-screen/index.tsx\";\nimport React from \"react\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { LoadingView } from \"../loading\";\nimport { Header } from \"../header\";\nimport { styles } from \"./styles\";\nexport var Screen = React.memo(function (_ref) {\n  var children = _ref.children,\n      customStyles = _ref.customStyles,\n      customHeader = _ref.customHeader,\n      header = _ref.header,\n      isLoading = _ref.isLoading;\n  return React.createElement(SafeAreaView, {\n    style: styles.screen,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }\n  }, header && React.createElement(Header, _extends({}, header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 20\n    }\n  })), customHeader, React.createElement(View, {\n    style: [styles.container, customStyles],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }\n  }, isLoading ? React.createElement(LoadingView, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 24\n    }\n  }) : children));\n});\nScreen.displayName = \"Screen\";","map":{"version":3,"sources":["/Users/valiant.lamban/Downloads/karosa-native/src/components/base-screen/index.tsx"],"names":["React","LoadingView","Header","styles","Screen","memo","children","customStyles","customHeader","header","isLoading","screen","container","displayName"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAGA,SAASC,WAAT;AACA,SAASC,MAAT;AAGA,SAASC,MAAT;AAEA,OAAO,IAAMC,MAAuB,GAAGJ,KAAK,CAACK,IAAN,CACrC,gBAAiE;AAAA,MAA9DC,QAA8D,QAA9DA,QAA8D;AAAA,MAApDC,YAAoD,QAApDA,YAAoD;AAAA,MAAtCC,YAAsC,QAAtCA,YAAsC;AAAA,MAAxBC,MAAwB,QAAxBA,MAAwB;AAAA,MAAhBC,SAAgB,QAAhBA,SAAgB;AAC/D,SACE,oBAAC,YAAD;AAAc,IAAA,KAAK,EAAEP,MAAM,CAACQ,MAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,MAAM,IAAI,oBAAC,MAAD,eAAYA,MAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADb,EAEGD,YAFH,EAGE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE,CAACL,MAAM,CAACS,SAAR,EAAmBL,YAAnB,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGG,SAAS,GAAG,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAH,GAAqBJ,QADjC,CAHF,CADF;AASD,CAXoC,CAAhC;AAcPF,MAAM,CAACS,WAAP,GAAqB,QAArB","sourcesContent":["import React from \"react\";\nimport { SafeAreaView, View } from \"react-native\";\n\nimport { LoadingView } from \"../loading\";\nimport { Header } from \"../header\";\n\nimport { Props } from \"./types\";\nimport { styles } from \"./styles\";\n\nexport const Screen: React.FC<Props> = React.memo(\n  ({ children, customStyles, customHeader, header, isLoading }) => {\n    return (\n      <SafeAreaView style={styles.screen}>\n        {header && <Header {...header} />}\n        {customHeader}\n        <View style={[styles.container, customStyles]}>\n          {isLoading ? <LoadingView /> : children}\n        </View>\n      </SafeAreaView>\n    );\n  }\n);\n\nScreen.displayName = \"Screen\";\n"]},"metadata":{},"sourceType":"module"}