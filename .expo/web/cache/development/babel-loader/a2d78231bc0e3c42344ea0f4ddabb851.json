{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/valiant.lamban/Downloads/karosa-native/src/components/formik/form-picker/index.tsx\";\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport { useField } from \"formik\";\nimport { Picker } from \"../../picker\";\nexport var FormPicker = React.memo(function (_ref) {\n  var name = _ref.name,\n      data = _ref.data,\n      placeholder = _ref.placeholder;\n\n  var _useField = useField(name),\n      _useField2 = _slicedToArray(_useField, 3),\n      meta = _useField2[1],\n      helpers = _useField2[2];\n\n  var _useState = useState(meta.value || meta.initialValue),\n      _useState2 = _slicedToArray(_useState, 2),\n      currentValue = _useState2[0],\n      setCurrentValue = _useState2[1];\n\n  useEffect(function () {\n    setCurrentValue(meta.value);\n  }, [meta.value]);\n  var handleChange = useCallback(function (itemValue, itemindex) {\n    var value = {\n      id: itemindex,\n      value: itemValue\n    };\n    setCurrentValue(value);\n    helpers.setValue(value);\n  }, [helpers]);\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }, React.createElement(Picker, {\n    onValueChange: handleChange,\n    data: data,\n    value: currentValue && currentValue.value,\n    placeholder: placeholder,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }));\n});","map":{"version":3,"sources":["/Users/valiant.lamban/Downloads/karosa-native/src/components/formik/form-picker/index.tsx"],"names":["React","useState","useEffect","useCallback","useField","Picker","FormPicker","memo","name","data","placeholder","meta","helpers","value","initialValue","currentValue","setCurrentValue","handleChange","itemValue","itemindex","id","setValue"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,WAArC,QAAmE,OAAnE;AACA,SAASC,QAAT,QAAyB,QAAzB;AACA,SAASC,MAAT;AAKA,OAAO,IAAMC,UAA2B,GAAGN,KAAK,CAACO,IAAN,CACzC,gBAAiC;AAAA,MAA9BC,IAA8B,QAA9BA,IAA8B;AAAA,MAAxBC,IAAwB,QAAxBA,IAAwB;AAAA,MAAlBC,WAAkB,QAAlBA,WAAkB;;AAAA,kBACLN,QAAQ,CAACI,IAAD,CADH;AAAA;AAAA,MACtBG,IADsB;AAAA,MAChBC,OADgB;;AAAA,kBAESX,QAAQ,CAC9CU,IAAI,CAACE,KAAL,IAAcF,IAAI,CAACG,YAD2B,CAFjB;AAAA;AAAA,MAExBC,YAFwB;AAAA,MAEVC,eAFU;;AAM/Bd,EAAAA,SAAS,CAAC,YAAM;AACdc,IAAAA,eAAe,CAACL,IAAI,CAACE,KAAN,CAAf;AACD,GAFQ,EAEN,CAACF,IAAI,CAACE,KAAN,CAFM,CAAT;AAIA,MAAMI,YAAY,GAAGd,WAAW,CAC9B,UAACe,SAAD,EAAuBC,SAAvB,EAA6C;AAC3C,QAAMN,KAAK,GAAG;AAAEO,MAAAA,EAAE,EAAED,SAAN;AAAiBN,MAAAA,KAAK,EAAEK;AAAxB,KAAd;AACAF,IAAAA,eAAe,CAACH,KAAD,CAAf;AACAD,IAAAA,OAAO,CAACS,QAAR,CAAiBR,KAAjB;AACD,GAL6B,EAM9B,CAACD,OAAD,CAN8B,CAAhC;AASA,SACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AACE,IAAA,aAAa,EAAEK,YADjB;AAEE,IAAA,IAAI,EAAER,IAFR;AAGE,IAAA,KAAK,EAAEM,YAAY,IAAIA,YAAY,CAACF,KAHtC;AAIE,IAAA,WAAW,EAAEH,WAJf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAUD,CA9BwC,CAApC","sourcesContent":["import React, { useState, useEffect, useCallback, ReactText } from \"react\";\nimport { useField } from \"formik\";\nimport { Picker } from \"@app/components/picker\";\nimport { PickerData } from \"@app/redux/api-models/common\";\n\nimport { Props } from \"./types\";\n\nexport const FormPicker: React.FC<Props> = React.memo(\n  ({ name, data, placeholder }) => {\n    const [, meta, helpers] = useField(name);\n    const [currentValue, setCurrentValue] = useState<PickerData>(\n      meta.value || meta.initialValue\n    );\n\n    useEffect(() => {\n      setCurrentValue(meta.value);\n    }, [meta.value]);\n\n    const handleChange = useCallback(\n      (itemValue: ReactText, itemindex: number) => {\n        const value = { id: itemindex, value: itemValue } as PickerData;\n        setCurrentValue(value);\n        helpers.setValue(value);\n      },\n      [helpers]\n    );\n\n    return (\n      <React.Fragment>\n        <Picker\n          onValueChange={handleChange}\n          data={data}\n          value={currentValue && currentValue.value}\n          placeholder={placeholder}\n        />\n      </React.Fragment>\n    );\n  }\n);\n"]},"metadata":{},"sourceType":"module"}