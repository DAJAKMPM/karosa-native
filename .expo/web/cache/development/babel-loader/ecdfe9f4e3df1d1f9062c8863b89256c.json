{"ast":null,"code":"import { combineReducers } from \"redux\";\nimport produce from \"immer\";\nimport { getType } from \"typesafe-actions\";\nimport * as actions from \"./actions\";\nimport * as data from \"./data\";\nexport var categoryListResponse = produce(function (draft, action) {\n  switch (action.type) {\n    case getType(actions.callCategoryListApi.request):\n      draft.isLoading = true;\n      return draft;\n\n    case getType(actions.callCategoryListApi.success):\n      draft.response = action.payload;\n      draft.isLoading = false;\n      return draft;\n\n    case getType(actions.callCategoryListApi.failure):\n      draft.error = action.payload;\n      draft.isLoading = false;\n      return draft;\n\n    default:\n      return draft;\n  }\n}, data.initCategoryState.categoryListResponse);\nvar reducer = combineReducers({\n  categoryListResponse: categoryListResponse\n});\nexport default reducer;","map":{"version":3,"sources":["/Users/valiant.lamban/Downloads/karosa-native/src/redux/category/reducers.ts"],"names":["combineReducers","produce","getType","actions","data","categoryListResponse","draft","action","type","callCategoryListApi","request","isLoading","success","response","payload","failure","error","initCategoryState","reducer"],"mappings":"AAAA,SAASA,eAAT,QAAgC,OAAhC;AACA,OAAOC,OAAP,MAA+B,OAA/B;AACA,SAASC,OAAT,QAAwB,kBAAxB;AAKA,OAAO,KAAKC,OAAZ;AAEA,OAAO,KAAKC,IAAZ;AAEA,OAAO,IAAMC,oBAAoB,GAAGJ,OAAO,CACzC,UACEK,KADF,EAEEC,MAFF,EAGK;AACH,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKN,OAAO,CAACC,OAAO,CAACM,mBAAR,CAA4BC,OAA7B,CAAZ;AACEJ,MAAAA,KAAK,CAACK,SAAN,GAAkB,IAAlB;AACA,aAAOL,KAAP;;AACF,SAAKJ,OAAO,CAACC,OAAO,CAACM,mBAAR,CAA4BG,OAA7B,CAAZ;AACEN,MAAAA,KAAK,CAACO,QAAN,GAAiBN,MAAM,CAACO,OAAxB;AACAR,MAAAA,KAAK,CAACK,SAAN,GAAkB,KAAlB;AACA,aAAOL,KAAP;;AACF,SAAKJ,OAAO,CAACC,OAAO,CAACM,mBAAR,CAA4BM,OAA7B,CAAZ;AACET,MAAAA,KAAK,CAACU,KAAN,GAAcT,MAAM,CAACO,OAArB;AACAR,MAAAA,KAAK,CAACK,SAAN,GAAkB,KAAlB;AACA,aAAOL,KAAP;;AACF;AACE,aAAOA,KAAP;AAbJ;AAeD,CApBwC,EAqBzCF,IAAI,CAACa,iBAAL,CAAuBZ,oBArBkB,CAApC;AAwBP,IAAMa,OAAO,GAAGlB,eAAe,CAAC;AAC9BK,EAAAA,oBAAoB,EAApBA;AAD8B,CAAD,CAA/B;AAIA,eAAea,OAAf","sourcesContent":["import { combineReducers } from \"redux\";\nimport produce, { Draft } from \"immer\";\nimport { getType } from \"typesafe-actions\";\nimport { ActionType } from \"typesafe-actions/dist/type-helpers\";\n\nimport { ResponseState } from \"../api-models/common\";\n\nimport * as actions from \"./actions\";\nimport * as models from \"./models\";\nimport * as data from \"./data\";\n\nexport const categoryListResponse = produce(\n  (\n    draft: Draft<ResponseState<models.CategoryListResponse>>,\n    action: ActionType<typeof actions>\n  ) => {\n    switch (action.type) {\n      case getType(actions.callCategoryListApi.request):\n        draft.isLoading = true;\n        return draft;\n      case getType(actions.callCategoryListApi.success):\n        draft.response = action.payload;\n        draft.isLoading = false;\n        return draft;\n      case getType(actions.callCategoryListApi.failure):\n        draft.error = action.payload;\n        draft.isLoading = false;\n        return draft;\n      default:\n        return draft;\n    }\n  },\n  data.initCategoryState.categoryListResponse\n);\n\nconst reducer = combineReducers({\n  categoryListResponse,\n});\n\nexport default reducer;\n"]},"metadata":{},"sourceType":"module"}