{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nvar _jsxFileName = \"/Users/valiant.lamban/Downloads/karosa-native/src/screens/auth/forgot/index.tsx\";\nimport React, { useCallback } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { FormikContext, useFormik } from \"formik\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { FormInput } from \"../../../components/formik/form-input\";\nimport { SubmitButton } from \"../../../components/formik/submit-button\";\nimport { BaseText } from \"../../../components/base-text\";\nimport { Screen } from \"../../../components/base-screen\";\nimport { actions } from \"../../../redux/auth\";\nimport routes from \"../../../navigators/routes\";\nimport { styles } from \"./styles\";\nimport { validationSchema } from \"./validation\";\n\nvar ForgotScreen = function ForgotScreen() {\n  var _useNavigation = useNavigation(),\n      goBack = _useNavigation.goBack,\n      navigate = _useNavigation.navigate;\n\n  var dispatch = useDispatch();\n  var callForgotApi = useCallback(function (request) {\n    return dispatch(actions.callForgotApi.request(request));\n  }, [dispatch]);\n  var handleSubmit = useCallback(function () {\n    try {\n      var request = {\n        identifier: formikBag.values.identifier\n      };\n      if (!formikBag.dirty) callForgotApi(request);\n    } catch (error) {}\n  }, [callForgotApi]);\n  var formikBag = useFormik({\n    initialValues: {\n      identifier: \"\"\n    },\n    validateOnChange: true,\n    validateOnBlur: true,\n    onSubmit: handleSubmit,\n    validationSchema: validationSchema\n  });\n  var screenProps = {\n    header: {\n      iconName: \"arrow-back\",\n      borderBottom: false,\n      text: {\n        right: \"Help\"\n      },\n      press: {\n        left: function left() {\n          return goBack();\n        },\n        right: function right() {\n          return navigate(routes.AUTH_HELP);\n        }\n      }\n    },\n    customStyles: styles.container\n  };\n  var identifierProps = {\n    name: \"identifier\",\n    placeholder: \"Email / Phone\"\n  };\n  var submitButtonProps = {\n    title: \"Submit\",\n    margin: 6\n  };\n  return React.createElement(FormikContext.Provider, {\n    value: formikBag,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 5\n    }\n  }, React.createElement(Screen, _extends({}, screenProps, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }\n  }), React.createElement(BaseText, {\n    customStyles: styles.txtForgotPass,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }, \"Forgot Password ?\"), React.createElement(BaseText, {\n    customStyles: styles.txtResetPass,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }, \"You can reset your password here.\"), React.createElement(FormInput, _extends({}, identifierProps, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }\n  })), React.createElement(SubmitButton, _extends({}, submitButtonProps, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }\n  }))));\n};\n\nexport default ForgotScreen;","map":{"version":3,"sources":["/Users/valiant.lamban/Downloads/karosa-native/src/screens/auth/forgot/index.tsx"],"names":["React","useCallback","useDispatch","FormikContext","useFormik","useNavigation","FormInput","SubmitButton","BaseText","Screen","actions","routes","styles","validationSchema","ForgotScreen","goBack","navigate","dispatch","callForgotApi","request","handleSubmit","identifier","formikBag","values","dirty","error","initialValues","validateOnChange","validateOnBlur","onSubmit","screenProps","header","iconName","borderBottom","text","right","press","left","AUTH_HELP","customStyles","container","identifierProps","name","placeholder","submitButtonProps","title","margin","txtForgotPass","txtResetPass"],"mappings":"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","sourcesContent":["import React, { useCallback } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { FormikContext, useFormik } from \"formik\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { FormInput } from \"@app/components/formik/form-input\";\nimport { SubmitButton } from \"@app/components/formik/submit-button\";\nimport { BaseText } from \"@app/components/base-text\";\nimport { Screen } from \"@app/components/base-screen\";\nimport { Props as SubmitButtonProps } from \"@app/components/formik/submit-button/types\";\nimport { Props as FormInputProps } from \"@app/components/formik/form-input/types\";\nimport { Props as ScreenProps } from \"@app/components/base-screen/types\";\nimport { actions } from \"@app/redux/auth\";\nimport { ForgotRequest } from \"@app/redux/auth/models\";\nimport routes from \"@app/navigators/routes\";\n\nimport { styles } from \"./styles\";\nimport { validationSchema } from \"./validation\";\n\nconst ForgotScreen: React.FC = () => {\n  const { goBack, navigate } = useNavigation();\n  const dispatch = useDispatch();\n\n  const callForgotApi = useCallback(\n    (request: ForgotRequest) =>\n      dispatch(actions.callForgotApi.request(request)),\n    [dispatch]\n  );\n\n  const handleSubmit = useCallback(() => {\n    try {\n      const request: ForgotRequest = {\n        identifier: formikBag.values.identifier,\n      };\n\n      if (!formikBag.dirty) callForgotApi(request);\n    } catch (error) {}\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [callForgotApi]);\n\n  const formikBag = useFormik({\n    initialValues: { identifier: \"\" },\n    validateOnChange: true,\n    validateOnBlur: true,\n    onSubmit: handleSubmit,\n    validationSchema,\n  });\n\n  const screenProps: ScreenProps = {\n    header: {\n      iconName: \"arrow-back\",\n      borderBottom: false,\n      text: {\n        right: \"Help\",\n      },\n      press: {\n        left: () => goBack(),\n        right: () => navigate(routes.AUTH_HELP),\n      },\n    },\n    customStyles: styles.container,\n  };\n\n  const identifierProps: FormInputProps = {\n    name: \"identifier\",\n    placeholder: \"Email / Phone\",\n  };\n\n  const submitButtonProps: SubmitButtonProps = {\n    title: \"Submit\",\n    margin: 6,\n  };\n\n  return (\n    <FormikContext.Provider value={formikBag}>\n      <Screen {...screenProps}>\n        <BaseText customStyles={styles.txtForgotPass}>\n          Forgot Password ?\n        </BaseText>\n        <BaseText customStyles={styles.txtResetPass}>\n          You can reset your password here.\n        </BaseText>\n\n        <FormInput {...identifierProps} />\n        <SubmitButton {...submitButtonProps} />\n      </Screen>\n    </FormikContext.Provider>\n  );\n};\n\nexport default ForgotScreen;\n"]},"metadata":{},"sourceType":"module"}