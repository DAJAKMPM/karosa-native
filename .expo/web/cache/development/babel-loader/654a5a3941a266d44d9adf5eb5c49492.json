{"ast":null,"code":"import { combineReducers } from \"redux\";\nimport produce from \"immer\";\nimport { getType } from \"typesafe-actions\";\nimport * as actions from \"./actions\";\nimport * as data from \"./data\";\nexport var regionResponse = produce(function (draft, action) {\n  switch (action.type) {\n    case getType(actions.callRegionApi.request):\n      draft.response = data.initLocationState.regionResponse.response;\n      draft.isLoading = true;\n      return draft;\n\n    case getType(actions.callRegionApi.success):\n      draft.response = action.payload;\n      draft.isLoading = false;\n      return draft;\n\n    case getType(actions.callRegionApi.failure):\n      draft.error = action.payload;\n      draft.isLoading = false;\n      return draft;\n\n    default:\n      return draft;\n  }\n}, data.initLocationState.regionResponse);\nexport var provinceResponse = produce(function (draft, action) {\n  switch (action.type) {\n    case getType(actions.callProvinceApi.request):\n      draft.response = data.initLocationState.provinceResponse.response;\n      draft.isLoading = true;\n      return draft;\n\n    case getType(actions.callProvinceApi.success):\n      draft.response = action.payload;\n      draft.isLoading = false;\n      return draft;\n\n    case getType(actions.callProvinceApi.failure):\n      draft.error = action.payload;\n      draft.isLoading = false;\n      return draft;\n\n    default:\n      return draft;\n  }\n}, data.initLocationState.provinceResponse);\nexport var barangayResponse = produce(function (draft, action) {\n  switch (action.type) {\n    case getType(actions.callBarangayApi.request):\n      draft.response = data.initLocationState.barangayResponse.response;\n      draft.isLoading = true;\n      return draft;\n\n    case getType(actions.callBarangayApi.success):\n      draft.response = action.payload;\n      draft.isLoading = false;\n      return draft;\n\n    case getType(actions.callBarangayApi.failure):\n      draft.error = action.payload;\n      draft.isLoading = false;\n      return draft;\n\n    default:\n      return draft;\n  }\n}, data.initLocationState.barangayResponse);\nexport var citiesResponse = produce(function (draft, action) {\n  switch (action.type) {\n    case getType(actions.callCitiesApi.request):\n      draft.response = data.initLocationState.citiesResponse.response;\n      draft.isLoading = true;\n      return draft;\n\n    case getType(actions.callCitiesApi.success):\n      draft.response = action.payload;\n      draft.isLoading = false;\n      return draft;\n\n    case getType(actions.callCitiesApi.failure):\n      draft.error = action.payload;\n      draft.isLoading = false;\n      return draft;\n\n    default:\n      return draft;\n  }\n}, data.initLocationState.citiesResponse);\nvar reducer = combineReducers({\n  regionResponse: regionResponse,\n  provinceResponse: provinceResponse,\n  barangayResponse: barangayResponse,\n  citiesResponse: citiesResponse\n});\nexport default reducer;","map":{"version":3,"sources":["/Users/valiant.lamban/Downloads/karosa-native/src/redux/location/reducers.ts"],"names":["combineReducers","produce","getType","actions","data","regionResponse","draft","action","type","callRegionApi","request","response","initLocationState","isLoading","success","payload","failure","error","provinceResponse","callProvinceApi","barangayResponse","callBarangayApi","citiesResponse","callCitiesApi","reducer"],"mappings":"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","sourcesContent":["import { combineReducers } from \"redux\";\nimport produce, { Draft } from \"immer\";\nimport { getType } from \"typesafe-actions\";\nimport { ActionType } from \"typesafe-actions/dist/type-helpers\";\n\nimport { ResponseState } from \"../api-models/common\";\n\nimport * as actions from \"./actions\";\nimport * as models from \"./models\";\nimport * as data from \"./data\";\n\nexport const regionResponse = produce(\n  (\n    draft: Draft<ResponseState<models.RegionResponse>>,\n    action: ActionType<typeof actions>\n  ) => {\n    switch (action.type) {\n      case getType(actions.callRegionApi.request):\n        draft.response = data.initLocationState.regionResponse.response;\n        draft.isLoading = true;\n        return draft;\n      case getType(actions.callRegionApi.success):\n        draft.response = action.payload;\n        draft.isLoading = false;\n        return draft;\n      case getType(actions.callRegionApi.failure):\n        draft.error = action.payload;\n        draft.isLoading = false;\n        return draft;\n      default:\n        return draft;\n    }\n  },\n  data.initLocationState.regionResponse\n);\n\nexport const provinceResponse = produce(\n  (\n    draft: Draft<ResponseState<models.ProvinceResponse>>,\n    action: ActionType<typeof actions>\n  ) => {\n    switch (action.type) {\n      case getType(actions.callProvinceApi.request):\n        draft.response = data.initLocationState.provinceResponse.response;\n        draft.isLoading = true;\n        return draft;\n      case getType(actions.callProvinceApi.success):\n        draft.response = action.payload;\n        draft.isLoading = false;\n        return draft;\n      case getType(actions.callProvinceApi.failure):\n        draft.error = action.payload;\n        draft.isLoading = false;\n        return draft;\n      default:\n        return draft;\n    }\n  },\n  data.initLocationState.provinceResponse\n);\n\nexport const barangayResponse = produce(\n  (\n    draft: Draft<ResponseState<models.BarangayResponse>>,\n    action: ActionType<typeof actions>\n  ) => {\n    switch (action.type) {\n      case getType(actions.callBarangayApi.request):\n        draft.response = data.initLocationState.barangayResponse.response;\n        draft.isLoading = true;\n        return draft;\n      case getType(actions.callBarangayApi.success):\n        draft.response = action.payload;\n        draft.isLoading = false;\n        return draft;\n      case getType(actions.callBarangayApi.failure):\n        draft.error = action.payload;\n        draft.isLoading = false;\n        return draft;\n      default:\n        return draft;\n    }\n  },\n  data.initLocationState.barangayResponse\n);\n\nexport const citiesResponse = produce(\n  (\n    draft: Draft<ResponseState<models.CitiesResponse>>,\n    action: ActionType<typeof actions>\n  ) => {\n    switch (action.type) {\n      case getType(actions.callCitiesApi.request):\n        draft.response = data.initLocationState.citiesResponse.response;\n        draft.isLoading = true;\n        return draft;\n      case getType(actions.callCitiesApi.success):\n        draft.response = action.payload;\n        draft.isLoading = false;\n        return draft;\n      case getType(actions.callCitiesApi.failure):\n        draft.error = action.payload;\n        draft.isLoading = false;\n        return draft;\n      default:\n        return draft;\n    }\n  },\n  data.initLocationState.citiesResponse\n);\n\nconst reducer = combineReducers({\n  regionResponse,\n  provinceResponse,\n  barangayResponse,\n  citiesResponse,\n});\n\nexport default reducer;\n"]},"metadata":{},"sourceType":"module"}