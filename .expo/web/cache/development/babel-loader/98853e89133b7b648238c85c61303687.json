{"ast":null,"code":"import { combineReducers } from \"redux\";\nimport produce from \"immer\";\nimport { getType } from \"typesafe-actions\";\nimport * as actions from \"./actions\";\nimport * as data from \"./data\";\nexport var shopEntryContext = produce(function (draft, action) {\n  switch (action.type) {\n    case getType(actions.setShopStatus):\n      draft.shopStatus = action.payload;\n      return draft;\n\n    default:\n      return draft;\n  }\n}, data.initShopState.shopEntryContext);\nexport var productEntryContext = produce(function (draft, action) {\n  switch (action.type) {\n    case getType(actions.setProductForm):\n      draft.productForm = action.payload;\n      return draft;\n\n    case getType(actions.setVariationForm):\n      draft.variationForm = action.payload;\n      return draft;\n\n    case getType(actions.setAvailabilityForm):\n      draft.availabilityForm = action.payload;\n      return draft;\n\n    case getType(actions.setWholesaleForm):\n      draft.wholesaleForm = action.payload;\n      return draft;\n\n    case getType(actions.setShippingDetailsForm):\n      draft.shippingDetailsForm = action.payload;\n      return draft;\n\n    case getType(actions.setProductStatus):\n      draft.productForm.status = action.payload;\n      return draft;\n\n    case getType(actions.setProductMeasurement):\n      draft.productForm.measurement = action.payload;\n      return draft;\n\n    case getType(actions.setCategory):\n      draft.productForm.categoryId = action.payload;\n      return draft;\n\n    case getType(actions.clearProductEntry):\n      draft = data.initShopState.productEntryContext;\n      return draft;\n\n    default:\n      return draft;\n  }\n}, data.initShopState.productEntryContext);\nexport var shopInfoResponse = produce(function (draft, action) {\n  switch (action.type) {\n    case getType(actions.callShopInfoApi.request):\n      draft.isLoading = true;\n      return draft;\n\n    case getType(actions.callShopInfoApi.success):\n      draft.response = action.payload;\n      draft.isLoading = false;\n      return draft;\n\n    case getType(actions.callShopInfoApi.failure):\n      draft.error = action.payload;\n      draft.isLoading = false;\n      return draft;\n\n    default:\n      return draft;\n  }\n}, data.initShopState.shopInfoResponse);\nexport var addProductResponse = produce(function (draft, action) {\n  switch (action.type) {\n    case getType(actions.callAddProductApi.request):\n      draft.response = data.initShopState.addProductResponse.response;\n      draft.isLoading = true;\n      return draft;\n\n    case getType(actions.callAddProductApi.success):\n      draft.response = action.payload;\n      draft.isLoading = false;\n      return draft;\n\n    case getType(actions.callAddProductApi.failure):\n      draft.error = action.payload;\n      draft.isLoading = false;\n      return draft;\n\n    default:\n      return draft;\n  }\n}, data.initShopState.addProductResponse);\nexport var productListResponse = produce(function (draft, action) {\n  switch (action.type) {\n    case getType(actions.callProductListApi.request):\n      draft.isLoading = true;\n      return draft;\n\n    case getType(actions.callProductListApi.success):\n      draft.response = action.payload;\n      draft.isLoading = false;\n      return draft;\n\n    case getType(actions.callProductListApi.failure):\n      draft.error = action.payload;\n      draft.isLoading = false;\n      return draft;\n\n    default:\n      return draft;\n  }\n}, data.initShopState.productListResponse);\nvar reducer = combineReducers({\n  shopEntryContext: shopEntryContext,\n  productEntryContext: productEntryContext,\n  shopInfoResponse: shopInfoResponse,\n  addProductResponse: addProductResponse,\n  productListResponse: productListResponse\n});\nexport default reducer;","map":{"version":3,"sources":["/Users/valiant.lamban/Downloads/karosa-native/src/redux/shop/reducers.ts"],"names":["combineReducers","produce","getType","actions","data","shopEntryContext","draft","action","type","setShopStatus","shopStatus","payload","initShopState","productEntryContext","setProductForm","productForm","setVariationForm","variationForm","setAvailabilityForm","availabilityForm","setWholesaleForm","wholesaleForm","setShippingDetailsForm","shippingDetailsForm","setProductStatus","status","setProductMeasurement","measurement","setCategory","categoryId","clearProductEntry","shopInfoResponse","callShopInfoApi","request","isLoading","success","response","failure","error","addProductResponse","callAddProductApi","productListResponse","callProductListApi","reducer"],"mappings":"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","sourcesContent":["import { combineReducers } from \"redux\";\nimport produce, { Draft } from \"immer\";\nimport { getType } from \"typesafe-actions\";\nimport { ActionType } from \"typesafe-actions/dist/type-helpers\";\n\nimport { ResponseState } from \"../api-models/common\";\n\nimport * as actions from \"./actions\";\nimport * as models from \"./models\";\nimport * as data from \"./data\";\n\nexport const shopEntryContext = produce(\n  (\n    draft: Draft<models.ShopEntryContext>,\n    action: ActionType<typeof actions>\n  ) => {\n    switch (action.type) {\n      case getType(actions.setShopStatus):\n        draft.shopStatus = action.payload;\n        return draft;\n      default:\n        return draft;\n    }\n  },\n  data.initShopState.shopEntryContext\n);\n\nexport const productEntryContext = produce(\n  (\n    draft: Draft<models.ProductEntryContext>,\n    action: ActionType<typeof actions>\n  ) => {\n    switch (action.type) {\n      case getType(actions.setProductForm):\n        draft.productForm = action.payload;\n        return draft;\n      case getType(actions.setVariationForm):\n        draft.variationForm = action.payload;\n        return draft;\n      case getType(actions.setAvailabilityForm):\n        draft.availabilityForm = action.payload;\n        return draft;\n      case getType(actions.setWholesaleForm):\n        draft.wholesaleForm = action.payload;\n        return draft;\n      case getType(actions.setShippingDetailsForm):\n        draft.shippingDetailsForm = action.payload;\n        return draft;\n      case getType(actions.setProductStatus):\n        draft.productForm.status = action.payload;\n        return draft;\n      case getType(actions.setProductMeasurement):\n        draft.productForm.measurement = action.payload;\n        return draft;\n      case getType(actions.setCategory):\n        draft.productForm.categoryId = action.payload;\n        return draft;\n      case getType(actions.clearProductEntry):\n        draft = data.initShopState.productEntryContext;\n        return draft;\n      default:\n        return draft;\n    }\n  },\n  data.initShopState.productEntryContext\n);\n\nexport const shopInfoResponse = produce(\n  (\n    draft: Draft<ResponseState<models.ShopInfoResponse>>,\n    action: ActionType<typeof actions>\n  ) => {\n    switch (action.type) {\n      case getType(actions.callShopInfoApi.request):\n        draft.isLoading = true;\n        return draft;\n      case getType(actions.callShopInfoApi.success):\n        draft.response = action.payload;\n        draft.isLoading = false;\n        return draft;\n      case getType(actions.callShopInfoApi.failure):\n        draft.error = action.payload;\n        draft.isLoading = false;\n        return draft;\n      default:\n        return draft;\n    }\n  },\n  data.initShopState.shopInfoResponse\n);\n\nexport const addProductResponse = produce(\n  (\n    draft: Draft<ResponseState<models.AddProductResponse>>,\n    action: ActionType<typeof actions>\n  ) => {\n    switch (action.type) {\n      case getType(actions.callAddProductApi.request):\n        draft.response = data.initShopState.addProductResponse.response;\n        draft.isLoading = true;\n        return draft;\n      case getType(actions.callAddProductApi.success):\n        draft.response = action.payload;\n        draft.isLoading = false;\n        return draft;\n      case getType(actions.callAddProductApi.failure):\n        draft.error = action.payload;\n        draft.isLoading = false;\n        return draft;\n      default:\n        return draft;\n    }\n  },\n  data.initShopState.addProductResponse\n);\n\nexport const productListResponse = produce(\n  (\n    draft: Draft<ResponseState<models.ProductListResponse>>,\n    action: ActionType<typeof actions>\n  ) => {\n    switch (action.type) {\n      case getType(actions.callProductListApi.request):\n        draft.isLoading = true;\n        return draft;\n      case getType(actions.callProductListApi.success):\n        draft.response = action.payload;\n        draft.isLoading = false;\n        return draft;\n      case getType(actions.callProductListApi.failure):\n        draft.error = action.payload;\n        draft.isLoading = false;\n        return draft;\n      default:\n        return draft;\n    }\n  },\n  data.initShopState.productListResponse\n);\n\nconst reducer = combineReducers({\n  shopEntryContext,\n  productEntryContext,\n  shopInfoResponse,\n  addProductResponse,\n  productListResponse,\n});\n\nexport default reducer;\n"]},"metadata":{},"sourceType":"module"}