{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/valiant.lamban/Downloads/karosa-native/src/components/formik/form-switch/index.tsx\";\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport Switch from \"react-native-web/dist/exports/Switch\";\nimport { useField } from \"formik\";\nimport { theme } from \"../../../styles\";\nexport var FormSwitch = React.memo(function (_ref) {\n  var name = _ref.name,\n      disabled = _ref.disabled;\n\n  var _useField = useField(name),\n      _useField2 = _slicedToArray(_useField, 3),\n      meta = _useField2[1],\n      helpers = _useField2[2];\n\n  var _useState = useState(meta.value || meta.initialValue),\n      _useState2 = _slicedToArray(_useState, 2),\n      currentValue = _useState2[0],\n      setCurrentValue = _useState2[1];\n\n  useEffect(function () {\n    helpers.setValue(currentValue);\n  }, [currentValue]);\n  var handleSwitch = useCallback(function _callee(value) {\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            setCurrentValue(value);\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(helpers.setTouched(true));\n\n          case 3:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }, [helpers]);\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }, React.createElement(Switch, {\n    trackColor: {\n      false: theme.colors.dark10,\n      true: theme.colors.primary\n    },\n    onValueChange: handleSwitch,\n    value: currentValue,\n    disabled: disabled,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }));\n});\nFormSwitch.displayName = \"FormSwitch\";","map":{"version":3,"sources":["/Users/valiant.lamban/Downloads/karosa-native/src/components/formik/form-switch/index.tsx"],"names":["React","useState","useEffect","useCallback","useField","theme","FormSwitch","memo","name","disabled","meta","helpers","value","initialValue","currentValue","setCurrentValue","setValue","handleSwitch","setTouched","false","colors","dark10","true","primary","displayName"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,WAArC,QAAwD,OAAxD;;AAEA,SAASC,QAAT,QAAyB,QAAzB;AACA,SAASC,KAAT;AAIA,OAAO,IAAMC,UAA2B,GAAGN,KAAK,CAACO,IAAN,CAAW,gBAAwB;AAAA,MAArBC,IAAqB,QAArBA,IAAqB;AAAA,MAAfC,QAAe,QAAfA,QAAe;;AAAA,kBAClDL,QAAQ,CAACI,IAAD,CAD0C;AAAA;AAAA,MACnEE,IADmE;AAAA,MAC7DC,OAD6D;;AAAA,kBAGpCV,QAAQ,CAC9CS,IAAI,CAACE,KAAL,IAAcF,IAAI,CAACG,YAD2B,CAH4B;AAAA;AAAA,MAGrEC,YAHqE;AAAA,MAGvDC,eAHuD;;AAO5Eb,EAAAA,SAAS,CAAC,YAAM;AACdS,IAAAA,OAAO,CAACK,QAAR,CAAiBF,YAAjB;AAED,GAHQ,EAGN,CAACA,YAAD,CAHM,CAAT;AAKA,MAAMG,YAAY,GAAGd,WAAW,CAC9B,iBAAOS,KAAP;AAAA;AAAA;AAAA;AAAA;AACEG,YAAAA,eAAe,CAACH,KAAD,CAAf;AADF;AAAA,6CAEQD,OAAO,CAACO,UAAR,CAAmB,IAAnB,CAFR;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAD8B,EAK9B,CAACP,OAAD,CAL8B,CAAhC;AAQA,SACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AACE,IAAA,UAAU,EAAE;AAAEQ,MAAAA,KAAK,EAAEd,KAAK,CAACe,MAAN,CAAaC,MAAtB;AAA8BC,MAAAA,IAAI,EAAEjB,KAAK,CAACe,MAAN,CAAaG;AAAjD,KADd;AAEE,IAAA,aAAa,EAAEN,YAFjB;AAGE,IAAA,KAAK,EAAEH,YAHT;AAIE,IAAA,QAAQ,EAAEL,QAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAUD,CA9B0C,CAApC;AAgCPH,UAAU,CAACkB,WAAX,GAAyB,YAAzB","sourcesContent":["import React, { useState, useEffect, useCallback } from \"react\";\nimport { Switch } from \"react-native\";\nimport { useField } from \"formik\";\nimport { theme } from \"@app/styles\";\n\nimport { Props } from \"./types\";\n\nexport const FormSwitch: React.FC<Props> = React.memo(({ name, disabled }) => {\n  const [, meta, helpers] = useField(name);\n\n  const [currentValue, setCurrentValue] = useState<boolean>(\n    meta.value || meta.initialValue\n  );\n\n  useEffect(() => {\n    helpers.setValue(currentValue);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [currentValue]);\n\n  const handleSwitch = useCallback(\n    async (value: boolean) => {\n      setCurrentValue(value);\n      await helpers.setTouched(true);\n    },\n    [helpers]\n  );\n\n  return (\n    <React.Fragment>\n      <Switch\n        trackColor={{ false: theme.colors.dark10, true: theme.colors.primary }}\n        onValueChange={handleSwitch}\n        value={currentValue}\n        disabled={disabled}\n      />\n    </React.Fragment>\n  );\n});\n\nFormSwitch.displayName = \"FormSwitch\";\n"]},"metadata":{},"sourceType":"module"}