{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nvar _jsxFileName = \"/Users/valiant.lamban/Downloads/karosa-native/src/screens/products/availability/index.tsx\";\nimport React, { useCallback } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { useDispatch } from \"react-redux\";\nimport { FormikContext, useFormik } from \"formik\";\nimport { BaseText } from \"../../../components/base-text\";\nimport { Separator } from \"../../../components/separator\";\nimport { SubmitButton } from \"../../../components/formik/submit-button\";\nimport { FormCheckbox } from \"../../../components/formik/form-checkbox\";\nimport { BottomSheet } from \"../../../components/bottom-sheet\";\nimport { useMemoizedSelector } from \"../../../hooks\";\nimport { actions, selectors } from \"../../../redux/shop\";\nimport { styles } from \"./styles\";\n\nvar AvailabilityModal = function AvailabilityModal(_ref) {\n  var sheetRef = _ref.sheetRef;\n  var dispatch = useDispatch();\n  var setAvailabilityForm = useCallback(function (values) {\n    return dispatch(actions.setAvailabilityForm(values));\n  }, [dispatch]);\n  var availabilityForm = useMemoizedSelector(selectors.getAvailabilityForm);\n  var formikBag = useFormik({\n    initialValues: availabilityForm,\n    onSubmit: function onSubmit(values) {\n      var _sheetRef$current;\n\n      setAvailabilityForm(values);\n      (_sheetRef$current = sheetRef.current) == null ? void 0 : _sheetRef$current.close();\n    }\n  });\n\n  var checkbox = function checkbox(label, name) {\n    return React.createElement(FormCheckbox, {\n      label: label,\n      name: name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 5\n      }\n    });\n  };\n\n  var separator = React.createElement(Separator, {\n    containerStyle: styles.separator,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 21\n    }\n  });\n\n  var elementIterator = function elementIterator(items) {\n    return items.map(function (item, key) {\n      return React.createElement(React.Fragment, {\n        key: key,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 7\n        }\n      }, item);\n    });\n  };\n\n  var elements = function elements() {\n    var items = [];\n    var mon = checkbox(\"Monday\", \"monday\");\n    var tues = checkbox(\"Tuesday\", \"tuesday\");\n    var wed = checkbox(\"Wednesday\", \"wednesday\");\n    var thurs = checkbox(\"Thursday\", \"thursday\");\n    var fri = checkbox(\"Friday\", \"friday\");\n    var sat = checkbox(\"Saturday\", \"saturday\");\n    var sun = checkbox(\"Sunday\", \"sunday\");\n    items.push(mon, separator, tues, separator, wed, separator, thurs, separator, fri, separator, sat, separator, sun, separator);\n    return elementIterator(items);\n  };\n\n  var doneButtonProps = {\n    title: \"Done\"\n  };\n  return React.createElement(FormikContext.Provider, {\n    value: formikBag,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 5\n    }\n  }, React.createElement(BottomSheet, {\n    height: 527,\n    ref: sheetRef,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }\n  }, React.createElement(BaseText, {\n    style: styles.txtProductStatus,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }\n  }, \"Available every\"), React.createElement(View, {\n    style: styles.spacer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  }), React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  }, elements()), React.createElement(View, {\n    style: styles.buttonContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }\n  }, React.createElement(SubmitButton, _extends({}, doneButtonProps, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 11\n    }\n  })))));\n};\n\nexport default AvailabilityModal;","map":{"version":3,"sources":["/Users/valiant.lamban/Downloads/karosa-native/src/screens/products/availability/index.tsx"],"names":["React","useCallback","useDispatch","FormikContext","useFormik","BaseText","Separator","SubmitButton","FormCheckbox","BottomSheet","useMemoizedSelector","actions","selectors","styles","AvailabilityModal","sheetRef","dispatch","setAvailabilityForm","values","availabilityForm","getAvailabilityForm","formikBag","initialValues","onSubmit","current","close","checkbox","label","name","separator","elementIterator","items","map","item","key","elements","mon","tues","wed","thurs","fri","sat","sun","push","doneButtonProps","title","txtProductStatus","spacer","buttonContainer"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,WAAhB,QAAmC,OAAnC;;AAEA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,aAAT,EAAwBC,SAAxB,QAAyC,QAAzC;AACA,SAASC,QAAT;AACA,SAASC,SAAT;AACA,SAASC,YAAT;AACA,SAASC,YAAT;AACA,SAASC,WAAT;AAEA,SAASC,mBAAT;AACA,SAASC,OAAT,EAAkBC,SAAlB;AAIA,SAASC,MAAT;;AAEA,IAAMC,iBAAkC,GAAG,SAArCA,iBAAqC,OAAkB;AAAA,MAAfC,QAAe,QAAfA,QAAe;AAC3D,MAAMC,QAAQ,GAAGd,WAAW,EAA5B;AAEA,MAAMe,mBAAmB,GAAGhB,WAAW,CACrC,UAACiB,MAAD;AAAA,WAA8BF,QAAQ,CAACL,OAAO,CAACM,mBAAR,CAA4BC,MAA5B,CAAD,CAAtC;AAAA,GADqC,EAErC,CAACF,QAAD,CAFqC,CAAvC;AAKA,MAAMG,gBAAgB,GAAGT,mBAAmB,CAACE,SAAS,CAACQ,mBAAX,CAA5C;AAEA,MAAMC,SAAS,GAAGjB,SAAS,CAAC;AAC1BkB,IAAAA,aAAa,EAAEH,gBADW;AAE1BI,IAAAA,QAAQ,EAAE,kBAACL,MAAD,EAAY;AAAA;;AACpBD,MAAAA,mBAAmB,CAACC,MAAD,CAAnB;AACA,2BAAAH,QAAQ,CAACS,OAAT,uCAAkBC,KAAlB;AACD;AALyB,GAAD,CAA3B;;AAQA,MAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,KAAD,EAAgBC,IAAhB;AAAA,WACf,oBAAC,YAAD;AAAc,MAAA,KAAK,EAAED,KAArB;AAA4B,MAAA,IAAI,EAAEC,IAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADe;AAAA,GAAjB;;AAIA,MAAMC,SAAS,GAAG,oBAAC,SAAD;AAAW,IAAA,cAAc,EAAEhB,MAAM,CAACgB,SAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAlB;;AAEA,MAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAiC;AACvD,WAAOA,KAAK,CAACC,GAAN,CAAU,UAACC,IAAD,EAAOC,GAAP;AAAA,aACf,oBAAC,KAAD,CAAO,QAAP;AAAgB,QAAA,GAAG,EAAEA,GAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA2BD,IAA3B,CADe;AAAA,KAAV,CAAP;AAGD,GAJD;;AAMA,MAAME,QAAQ,GAAG,SAAXA,QAAW,GAA4B;AAC3C,QAAMJ,KAA2B,GAAG,EAApC;AAEA,QAAMK,GAAG,GAAGV,QAAQ,CAAC,QAAD,EAAW,QAAX,CAApB;AACA,QAAMW,IAAI,GAAGX,QAAQ,CAAC,SAAD,EAAY,SAAZ,CAArB;AACA,QAAMY,GAAG,GAAGZ,QAAQ,CAAC,WAAD,EAAc,WAAd,CAApB;AACA,QAAMa,KAAK,GAAGb,QAAQ,CAAC,UAAD,EAAa,UAAb,CAAtB;AACA,QAAMc,GAAG,GAAGd,QAAQ,CAAC,QAAD,EAAW,QAAX,CAApB;AACA,QAAMe,GAAG,GAAGf,QAAQ,CAAC,UAAD,EAAa,UAAb,CAApB;AACA,QAAMgB,GAAG,GAAGhB,QAAQ,CAAC,QAAD,EAAW,QAAX,CAApB;AAEAK,IAAAA,KAAK,CAACY,IAAN,CACEP,GADF,EAEEP,SAFF,EAGEQ,IAHF,EAIER,SAJF,EAKES,GALF,EAMET,SANF,EAOEU,KAPF,EAQEV,SARF,EASEW,GATF,EAUEX,SAVF,EAWEY,GAXF,EAYEZ,SAZF,EAaEa,GAbF,EAcEb,SAdF;AAiBA,WAAOC,eAAe,CAACC,KAAD,CAAtB;AACD,GA7BD;;AA+BA,MAAMa,eAAkC,GAAG;AACzCC,IAAAA,KAAK,EAAE;AADkC,GAA3C;AAIA,SACE,oBAAC,aAAD,CAAe,QAAf;AAAwB,IAAA,KAAK,EAAExB,SAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,WAAD;AAAa,IAAA,MAAM,EAAE,GAArB;AAA0B,IAAA,GAAG,EAAEN,QAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAEF,MAAM,CAACiC,gBAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,EAEE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEjC,MAAM,CAACkC,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAiBZ,QAAQ,EAAzB,CAHF,EAKE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEtB,MAAM,CAACmC,eAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,YAAD,eAAkBJ,eAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF,CALF,CADF,CADF;AAaD,CA9ED;;AAgFA,eAAe9B,iBAAf","sourcesContent":["import React, { useCallback } from \"react\";\nimport { View } from \"react-native\";\nimport { useDispatch } from \"react-redux\";\nimport { FormikContext, useFormik } from \"formik\";\nimport { BaseText } from \"@app/components/base-text\";\nimport { Separator } from \"@app/components/separator\";\nimport { SubmitButton } from \"@app/components/formik/submit-button\";\nimport { FormCheckbox } from \"@app/components/formik/form-checkbox\";\nimport { BottomSheet } from \"@app/components/bottom-sheet\";\nimport { Props as SubmitButtonProps } from \"@app/components/formik/submit-button/types\";\nimport { useMemoizedSelector } from \"@app/hooks\";\nimport { actions, selectors } from \"@app/redux/shop\";\nimport { AvailabilityForm } from \"@app/redux/shop/models\";\n\nimport { Props } from \"./types\";\nimport { styles } from \"./styles\";\n\nconst AvailabilityModal: React.FC<Props> = ({ sheetRef }) => {\n  const dispatch = useDispatch();\n\n  const setAvailabilityForm = useCallback(\n    (values: AvailabilityForm) => dispatch(actions.setAvailabilityForm(values)),\n    [dispatch]\n  );\n\n  const availabilityForm = useMemoizedSelector(selectors.getAvailabilityForm);\n\n  const formikBag = useFormik({\n    initialValues: availabilityForm,\n    onSubmit: (values) => {\n      setAvailabilityForm(values);\n      sheetRef.current?.close();\n    },\n  });\n\n  const checkbox = (label: string, name: string) => (\n    <FormCheckbox label={label} name={name} />\n  );\n\n  const separator = <Separator containerStyle={styles.separator} />;\n\n  const elementIterator = (items: React.ReactElement[]) => {\n    return items.map((item, key) => (\n      <React.Fragment key={key}>{item}</React.Fragment>\n    ));\n  };\n\n  const elements = (): React.ReactElement[] => {\n    const items: React.ReactElement[] = [];\n\n    const mon = checkbox(\"Monday\", \"monday\");\n    const tues = checkbox(\"Tuesday\", \"tuesday\");\n    const wed = checkbox(\"Wednesday\", \"wednesday\");\n    const thurs = checkbox(\"Thursday\", \"thursday\");\n    const fri = checkbox(\"Friday\", \"friday\");\n    const sat = checkbox(\"Saturday\", \"saturday\");\n    const sun = checkbox(\"Sunday\", \"sunday\");\n\n    items.push(\n      mon,\n      separator,\n      tues,\n      separator,\n      wed,\n      separator,\n      thurs,\n      separator,\n      fri,\n      separator,\n      sat,\n      separator,\n      sun,\n      separator\n    );\n\n    return elementIterator(items);\n  };\n\n  const doneButtonProps: SubmitButtonProps = {\n    title: \"Done\",\n  };\n\n  return (\n    <FormikContext.Provider value={formikBag}>\n      <BottomSheet height={527} ref={sheetRef}>\n        <BaseText style={styles.txtProductStatus}>Available every</BaseText>\n        <View style={styles.spacer} />\n        <React.Fragment>{elements()}</React.Fragment>\n\n        <View style={styles.buttonContainer}>\n          <SubmitButton {...doneButtonProps} />\n        </View>\n      </BottomSheet>\n    </FormikContext.Provider>\n  );\n};\n\nexport default AvailabilityModal;\n"]},"metadata":{},"sourceType":"module"}