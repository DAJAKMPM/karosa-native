{"ast":null,"code":"import { applyMiddleware, createStore } from \"redux\";\nimport { persistStore, persistReducer } from \"redux-persist\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport { createLogger } from \"redux-logger\";\nimport createSagaMiddleware from \"redux-saga\";\nimport AsyncStorage from \"@react-native-community/async-storage\";\nimport { reset } from \"./producers\";\nimport rootSaga from \"./sagas\";\nimport reducer from \"./reducers\";\n\nvar rootReducer = function rootReducer(state, action) {\n  var draft = reset(state, action);\n  return reducer(draft, action);\n};\n\nexport var configureStore = function configureStore(initialState) {\n  var loggerMiddleware = createLogger({\n    collapsed: true\n  });\n  var sagaMiddleware = createSagaMiddleware();\n  var enhancers = [sagaMiddleware];\n  var persistConfig = {\n    key: \"root\",\n    storage: AsyncStorage\n  };\n  var persistedReducer = persistReducer(persistConfig, rootReducer);\n  var composeEnhancers = composeWithDevTools({\n    trace: true,\n    traceLimit: 25\n  });\n  var store = createStore(persistedReducer, initialState, composeEnhancers(applyMiddleware.apply(void 0, enhancers)));\n  var persistor = persistStore(store);\n  enhancers.push(loggerMiddleware);\n  sagaMiddleware.run(rootSaga);\n  return {\n    store: store,\n    persistor: persistor\n  };\n};\nexport default configureStore;","map":{"version":3,"sources":["/Users/valiant.lamban/Downloads/karosa-native/src/redux/store.ts"],"names":["applyMiddleware","createStore","persistStore","persistReducer","composeWithDevTools","createLogger","createSagaMiddleware","AsyncStorage","reset","rootSaga","reducer","rootReducer","state","action","draft","configureStore","initialState","loggerMiddleware","collapsed","sagaMiddleware","enhancers","persistConfig","key","storage","persistedReducer","composeEnhancers","trace","traceLimit","store","persistor","push","run"],"mappings":"AAAA,SAASA,eAAT,EAA0BC,WAA1B,QAA6C,OAA7C;AACA,SAASC,YAAT,EAAuBC,cAAvB,QAA6C,eAA7C;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,YAAT,QAA6B,cAA7B;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AACA,OAAOC,YAAP,MAAyB,uCAAzB;AAEA,SAASC,KAAT;AACA,OAAOC,QAAP;AACA,OAAOC,OAAP;;AAEA,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,KAAD,EAAaC,MAAb,EAA6B;AAC/C,MAAMC,KAAU,GAAGN,KAAK,CAACI,KAAD,EAAQC,MAAR,CAAxB;AACA,SAAOH,OAAO,CAACI,KAAD,EAAQD,MAAR,CAAd;AACD,CAHD;;AAKA,OAAO,IAAME,cAAc,GAAG,SAAjBA,cAAiB,CAACC,YAAD,EAAuB;AACnD,MAAMC,gBAAgB,GAAGZ,YAAY,CAAC;AAAEa,IAAAA,SAAS,EAAE;AAAb,GAAD,CAArC;AACA,MAAMC,cAAc,GAAGb,oBAAoB,EAA3C;AACA,MAAMc,SAAqB,GAAG,CAACD,cAAD,CAA9B;AAEA,MAAME,aAAa,GAAG;AACpBC,IAAAA,GAAG,EAAE,MADe;AAEpBC,IAAAA,OAAO,EAAEhB;AAFW,GAAtB;AAKA,MAAMiB,gBAAgB,GAAGrB,cAAc,CAACkB,aAAD,EAAgBV,WAAhB,CAAvC;AAEA,MAAMc,gBAAgB,GAAGrB,mBAAmB,CAAC;AAAEsB,IAAAA,KAAK,EAAE,IAAT;AAAeC,IAAAA,UAAU,EAAE;AAA3B,GAAD,CAA5C;AAEA,MAAMC,KAAK,GAAG3B,WAAW,CACvBuB,gBADuB,EAEvBR,YAFuB,EAGvBS,gBAAgB,CAACzB,eAAe,MAAf,SAAmBoB,SAAnB,CAAD,CAHO,CAAzB;AAMA,MAAMS,SAAS,GAAG3B,YAAY,CAAC0B,KAAD,CAA9B;AAEAR,EAAAA,SAAS,CAACU,IAAV,CAAeb,gBAAf;AAEAE,EAAAA,cAAc,CAACY,GAAf,CAAmBtB,QAAnB;AAEA,SAAO;AAAEmB,IAAAA,KAAK,EAALA,KAAF;AAASC,IAAAA,SAAS,EAATA;AAAT,GAAP;AACD,CA3BM;AA6BP,eAAed,cAAf","sourcesContent":["import { applyMiddleware, createStore } from \"redux\";\nimport { persistStore, persistReducer } from \"redux-persist\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport { createLogger } from \"redux-logger\";\nimport createSagaMiddleware from \"redux-saga\";\nimport AsyncStorage from \"@react-native-community/async-storage\";\n\nimport { reset } from \"./producers\";\nimport rootSaga from \"./sagas\";\nimport reducer from \"./reducers\";\n\nconst rootReducer = (state: any, action: any) => {\n  const draft: any = reset(state, action);\n  return reducer(draft, action);\n};\n\nexport const configureStore = (initialState: any) => {\n  const loggerMiddleware = createLogger({ collapsed: true });\n  const sagaMiddleware = createSagaMiddleware();\n  const enhancers: Array<any> = [sagaMiddleware];\n\n  const persistConfig = {\n    key: \"root\",\n    storage: AsyncStorage,\n  };\n\n  const persistedReducer = persistReducer(persistConfig, rootReducer);\n\n  const composeEnhancers = composeWithDevTools({ trace: true, traceLimit: 25 });\n\n  const store = createStore(\n    persistedReducer,\n    initialState,\n    composeEnhancers(applyMiddleware(...enhancers))\n  );\n\n  const persistor = persistStore(store);\n\n  enhancers.push(loggerMiddleware);\n\n  sagaMiddleware.run(rootSaga);\n\n  return { store, persistor };\n};\n\nexport default configureStore;\n"]},"metadata":{},"sourceType":"module"}