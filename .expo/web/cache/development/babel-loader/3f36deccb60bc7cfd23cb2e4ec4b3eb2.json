{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nvar _jsxFileName = \"/Users/valiant.lamban/Downloads/karosa-native/src/screens/products/shipping-details/index.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useCallback } from \"react\";\nimport { Header, ListItem } from \"react-native-elements\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { FormikContext, useFormik } from \"formik\";\nimport { useDispatch } from \"react-redux\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { theme } from \"../../../styles\";\nimport { Screen } from \"../../../components/base-screen\";\nimport { ListInput } from \"../../../components/list/list-input\";\nimport { SubmitButton } from \"../../../components/formik/submit-button\";\nimport { ListSwitch } from \"../../../components/list/list-switch\";\nimport { useMemoizedSelector } from \"../../../hooks\";\nimport { actions, selectors } from \"../../../redux/shop\";\nimport { validationSchema } from \"./validation\";\nimport { styles } from \"./styles\";\n\nvar ShippingDetailsScreen = function ShippingDetailsScreen() {\n  var dispatch = useDispatch();\n\n  var _useNavigation = useNavigation(),\n      goBack = _useNavigation.goBack;\n\n  var screenProps = {\n    customHeader: React.createElement(Header, {\n      containerStyle: {\n        backgroundColor: \"transparent\"\n      },\n      leftComponent: {\n        icon: \"arrow-back\",\n        color: theme.colors.primary,\n        onPress: goBack\n      },\n      centerComponent: {\n        text: \"Shipping Details\",\n        style: _objectSpread(_objectSpread({}, theme.textRegular), {}, {\n          fontWeight: \"700\",\n          alignSelf: \"center\"\n        })\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 7\n      }\n    }),\n    customStyles: styles.container\n  };\n  var setShippingDetailsForm = useCallback(function (values) {\n    return dispatch(actions.setShippingDetailsForm(values));\n  }, [dispatch]);\n  var shippingDetailsForm = useMemoizedSelector(selectors.getShippingDetailsForm);\n  var formikBag = useFormik({\n    initialValues: shippingDetailsForm,\n    validateOnBlur: true,\n    validateOnChange: true,\n    validationSchema: validationSchema,\n    onSubmit: function onSubmit(values) {\n      setShippingDetailsForm(values);\n      goBack();\n    }\n  });\n\n  var listInput = function listInput(name, label, placeholder, required) {\n    return React.createElement(ListInput, {\n      isRow: true,\n      hasBottomDivider: true,\n      required: required,\n      name: name,\n      label: label,\n      placeholder: placeholder,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 7\n      }\n    });\n  };\n\n  var listSwitch = function listSwitch(name, title, extraInfo, disabled) {\n    return React.createElement(ListSwitch, {\n      boldTitle: title,\n      name: name,\n      hasBottomDivider: true,\n      extraInfo: extraInfo,\n      disabled: disabled,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 7\n      }\n    });\n  };\n\n  var listIterator = function listIterator(listItems) {\n    return listItems.map(function (item, key) {\n      return React.createElement(React.Fragment, {\n        key: key,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 7\n        }\n      }, item);\n    });\n  };\n\n  var inputDisplay = function inputDisplay() {\n    var elements = [];\n    var width = listInput(\"width\", \"Width (cm)\", \"Set\", false);\n    var length = listInput(\"length\", \"Length (cm)\", \"Set\", false);\n    var height = listInput(\"height\", \"Height (cm)\", \"Set\", false);\n    elements.push(width, length, height);\n    return listIterator(elements);\n  };\n\n  var switchDisplay = function switchDisplay() {\n    var elements = [];\n    var noWeight = !formikBag.values.weight;\n    var expressDelivery = listSwitch(\"expressDelivery\", \"Express Delivery\", \"(Weight Required)\", noWeight);\n    var karosaDelivery = listSwitch(\"karosaDelivery\", \"Karosa Delivery\", \"(Weight Required)\", noWeight);\n    var pickUpBuyer = listSwitch(\"pickUpBuyer\", \"Pick Up by Buyer\", undefined, false);\n    var sellerCourier = listSwitch(\"sellerCourier\", \"Seller Own Courier\", undefined, false);\n    elements.push(expressDelivery, karosaDelivery, pickUpBuyer, sellerCourier);\n    return listIterator(elements);\n  };\n\n  var saveButtonProps = {\n    title: \"Save\"\n  };\n  return React.createElement(FormikContext.Provider, {\n    value: formikBag,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 5\n    }\n  }, React.createElement(Screen, _extends({}, screenProps, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 7\n    }\n  }), React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 9\n    }\n  }, listInput(\"weight\", \"Weight per product\", \"Set Weight\", true)), React.createElement(View, {\n    style: styles.separator,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 9\n    }\n  }), React.createElement(ListItem, {\n    bottomDivider: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 9\n    }\n  }, React.createElement(ListItem.Title, {\n    style: styles.txtPackaging,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 11\n    }\n  }, \"Packaging Size\")), React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 9\n    }\n  }, inputDisplay()), React.createElement(View, {\n    style: styles.separator,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 9\n    }\n  }), React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 9\n    }\n  }, switchDisplay()), React.createElement(View, {\n    style: styles.buttonContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 9\n    }\n  }, React.createElement(SubmitButton, _extends({}, saveButtonProps, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 11\n    }\n  })))));\n};\n\nexport default ShippingDetailsScreen;","map":{"version":3,"sources":["/Users/valiant.lamban/Downloads/karosa-native/src/screens/products/shipping-details/index.tsx"],"names":["React","useCallback","Header","ListItem","FormikContext","useFormik","useDispatch","useNavigation","theme","Screen","ListInput","SubmitButton","ListSwitch","useMemoizedSelector","actions","selectors","validationSchema","styles","ShippingDetailsScreen","dispatch","goBack","screenProps","customHeader","backgroundColor","icon","color","colors","primary","onPress","text","style","textRegular","fontWeight","alignSelf","customStyles","container","setShippingDetailsForm","values","shippingDetailsForm","getShippingDetailsForm","formikBag","initialValues","validateOnBlur","validateOnChange","onSubmit","listInput","name","label","placeholder","required","listSwitch","title","extraInfo","disabled","listIterator","listItems","map","item","key","inputDisplay","elements","width","length","height","push","switchDisplay","noWeight","weight","expressDelivery","karosaDelivery","pickUpBuyer","undefined","sellerCourier","saveButtonProps","separator","txtPackaging","buttonContainer"],"mappings":"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","sourcesContent":["import React, { useCallback } from \"react\";\nimport { Header, ListItem } from \"react-native-elements\";\nimport { View } from \"react-native\";\nimport { FormikContext, useFormik } from \"formik\";\nimport { useDispatch } from \"react-redux\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { theme } from \"@app/styles\";\nimport { Screen } from \"@app/components/base-screen\";\nimport { ListInput } from \"@app/components/list/list-input\";\nimport { SubmitButton } from \"@app/components/formik/submit-button\";\nimport { ListSwitch } from \"@app/components/list/list-switch\";\nimport { Props as ScreenProps } from \"@app/components/base-screen/types\";\nimport { Props as SubmitButtonProps } from \"@app/components/formik/submit-button/types\";\nimport { useMemoizedSelector } from \"@app/hooks\";\nimport { actions, selectors } from \"@app/redux/shop\";\nimport { ShippingDetailsForm } from \"@app/redux/shop/models\";\n\nimport { validationSchema } from \"./validation\";\nimport { styles } from \"./styles\";\n\nconst ShippingDetailsScreen: React.FC = () => {\n  const dispatch = useDispatch();\n\n  const { goBack } = useNavigation();\n\n  const screenProps: ScreenProps = {\n    customHeader: (\n      <Header\n        containerStyle={{ backgroundColor: \"transparent\" }}\n        leftComponent={{\n          icon: \"arrow-back\",\n          color: theme.colors.primary,\n          onPress: goBack,\n        }}\n        centerComponent={{\n          text: \"Shipping Details\",\n          style: {\n            ...theme.textRegular,\n            fontWeight: \"700\",\n            alignSelf: \"center\",\n          },\n        }}\n      />\n    ),\n    customStyles: styles.container,\n  };\n\n  const setShippingDetailsForm = useCallback(\n    (values: ShippingDetailsForm) =>\n      dispatch(actions.setShippingDetailsForm(values)),\n    [dispatch]\n  );\n\n  const shippingDetailsForm = useMemoizedSelector(\n    selectors.getShippingDetailsForm\n  );\n\n  const formikBag = useFormik({\n    initialValues: shippingDetailsForm,\n    validateOnBlur: true,\n    validateOnChange: true,\n    validationSchema,\n    onSubmit: (values) => {\n      setShippingDetailsForm(values);\n      goBack();\n    },\n  });\n\n  const listInput = (\n    name: string,\n    label: string,\n    placeholder: string,\n    required: boolean\n  ): JSX.Element => {\n    return (\n      <ListInput\n        isRow\n        hasBottomDivider\n        required={required}\n        name={name}\n        label={label}\n        placeholder={placeholder}\n      />\n    );\n  };\n\n  const listSwitch = (\n    name: string,\n    title: string,\n    extraInfo: string | undefined,\n    disabled: boolean\n  ): JSX.Element => {\n    return (\n      <ListSwitch\n        boldTitle={title}\n        name={name}\n        hasBottomDivider\n        extraInfo={extraInfo}\n        disabled={disabled}\n      />\n    );\n  };\n\n  const listIterator = (listItems: React.ReactElement[]) => {\n    return listItems.map((item, key) => (\n      <React.Fragment key={key}>{item}</React.Fragment>\n    ));\n  };\n\n  const inputDisplay = (): React.ReactElement[] => {\n    const elements: React.ReactElement[] = [];\n\n    const width = listInput(\"width\", \"Width (cm)\", \"Set\", false);\n    const length = listInput(\"length\", \"Length (cm)\", \"Set\", false);\n    const height = listInput(\"height\", \"Height (cm)\", \"Set\", false);\n\n    elements.push(width, length, height);\n\n    return listIterator(elements);\n  };\n\n  const switchDisplay = (): React.ReactElement[] => {\n    const elements: React.ReactElement[] = [];\n\n    const noWeight = !formikBag.values.weight;\n\n    const expressDelivery = listSwitch(\n      \"expressDelivery\",\n      \"Express Delivery\",\n      \"(Weight Required)\",\n      noWeight\n    );\n    const karosaDelivery = listSwitch(\n      \"karosaDelivery\",\n      \"Karosa Delivery\",\n      \"(Weight Required)\",\n      noWeight\n    );\n    const pickUpBuyer = listSwitch(\n      \"pickUpBuyer\",\n      \"Pick Up by Buyer\",\n      undefined,\n      false\n    );\n    const sellerCourier = listSwitch(\n      \"sellerCourier\",\n      \"Seller Own Courier\",\n      undefined,\n      false\n    );\n\n    elements.push(expressDelivery, karosaDelivery, pickUpBuyer, sellerCourier);\n\n    return listIterator(elements);\n  };\n\n  const saveButtonProps: SubmitButtonProps = {\n    title: \"Save\",\n  };\n\n  return (\n    <FormikContext.Provider value={formikBag}>\n      <Screen {...screenProps}>\n        <React.Fragment>\n          {listInput(\"weight\", \"Weight per product\", \"Set Weight\", true)}\n        </React.Fragment>\n\n        <View style={styles.separator} />\n\n        <ListItem bottomDivider>\n          <ListItem.Title style={styles.txtPackaging}>\n            Packaging Size\n          </ListItem.Title>\n        </ListItem>\n\n        <React.Fragment>{inputDisplay()}</React.Fragment>\n\n        <View style={styles.separator} />\n\n        <React.Fragment>{switchDisplay()}</React.Fragment>\n\n        <View style={styles.buttonContainer}>\n          <SubmitButton {...saveButtonProps} />\n        </View>\n      </Screen>\n    </FormikContext.Provider>\n  );\n};\n\nexport default ShippingDetailsScreen;\n"]},"metadata":{},"sourceType":"module"}