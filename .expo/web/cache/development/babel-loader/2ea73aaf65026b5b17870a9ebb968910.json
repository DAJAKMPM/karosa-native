{"ast":null,"code":"var _jsxFileName = \"/Users/valiant.lamban/Downloads/karosa-native/src/components/list/list-input/index.tsx\";\nimport React, { useMemo } from \"react\";\nimport { ListItem } from \"react-native-elements\";\nimport { useFormikContext } from \"formik\";\nimport { BaseText } from \"../../base-text\";\nimport { FormInput } from \"../../formik/form-input\";\nimport { theme } from \"../../../styles\";\nimport { styles } from \"./styles\";\nexport var ListInput = React.memo(function (_ref) {\n  var isColumn = _ref.isColumn,\n      isRow = _ref.isRow,\n      label = _ref.label,\n      placeholder = _ref.placeholder,\n      required = _ref.required,\n      name = _ref.name,\n      maxLength = _ref.maxLength,\n      hasBottomDivider = _ref.hasBottomDivider;\n\n  var _useFormikContext = useFormikContext(),\n      values = _useFormikContext.values;\n\n  var currentLength = useMemo(function () {\n    return values[name].length;\n  }, [name, values]);\n  return React.createElement(ListItem, {\n    bottomDivider: hasBottomDivider,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }, isColumn && React.createElement(ListItem.Content, {\n    style: styles.columnContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 11\n    }\n  }, React.createElement(ListItem.Content, {\n    style: styles.columnLabelContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }\n  }, React.createElement(BaseText, {\n    style: styles.txtLabel,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 15\n    }\n  }, label), React.createElement(BaseText, {\n    style: styles.totalDigits,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 15\n    }\n  }, \"(\", currentLength, \"/\", maxLength, \")\"), required && React.createElement(BaseText, {\n    style: styles.required,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 28\n    }\n  }, \"*\")), React.createElement(ListItem.Content, {\n    style: styles.columnInputContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }, React.createElement(FormInput, {\n    name: name,\n    placeholder: placeholder,\n    numberOfLines: 10,\n    customStyles: styles.inputStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 15\n    }\n  }))), isRow && React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }\n  }, React.createElement(ListItem.Content, {\n    style: styles.rowContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }, React.createElement(BaseText, {\n    style: styles.txtLabel,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 15\n    }\n  }, label), required && React.createElement(BaseText, {\n    style: styles.required,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 28\n    }\n  }, \"*\")), React.createElement(ListItem.Content, {\n    style: styles.rowInputContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }, React.createElement(FormInput, {\n    name: name,\n    placeholder: placeholder,\n    placeholderTextColor: theme.colors.primary,\n    numberOfLines: 1,\n    style: styles.rowInput,\n    customStyles: styles.inputStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 15\n    }\n  }))));\n});\nListInput.displayName = \"ListInput\";","map":{"version":3,"sources":["/Users/valiant.lamban/Downloads/karosa-native/src/components/list/list-input/index.tsx"],"names":["React","useMemo","ListItem","useFormikContext","BaseText","FormInput","theme","styles","ListInput","memo","isColumn","isRow","label","placeholder","required","name","maxLength","hasBottomDivider","values","currentLength","length","columnContainer","columnLabelContainer","txtLabel","totalDigits","columnInputContainer","inputStyle","rowContainer","rowInputContainer","colors","primary","rowInput","displayName"],"mappings":"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","sourcesContent":["import React, { useMemo } from \"react\";\nimport { ListItem } from \"react-native-elements\";\nimport { useFormikContext } from \"formik\";\nimport { BaseText } from \"@app/components/base-text\";\nimport { FormInput } from \"@app/components/formik/form-input\";\nimport { theme } from \"@app/styles\";\n\nimport { Props } from \"./types\";\nimport { styles } from \"./styles\";\n\nexport const ListInput: React.FC<Props> = React.memo(\n  ({\n    isColumn,\n    isRow,\n    label,\n    placeholder,\n    required,\n    name,\n    maxLength,\n    hasBottomDivider,\n  }) => {\n    const { values } = useFormikContext<any>();\n\n    const currentLength = useMemo(() => {\n      return values[name].length;\n    }, [name, values]);\n\n    return (\n      <ListItem bottomDivider={hasBottomDivider}>\n        {isColumn && (\n          <ListItem.Content style={styles.columnContainer}>\n            <ListItem.Content style={styles.columnLabelContainer}>\n              <BaseText style={styles.txtLabel}>{label}</BaseText>\n              <BaseText style={styles.totalDigits}>\n                ({currentLength}/{maxLength})\n              </BaseText>\n              {required && <BaseText style={styles.required}>*</BaseText>}\n            </ListItem.Content>\n            <ListItem.Content style={styles.columnInputContainer}>\n              <FormInput\n                name={name}\n                placeholder={placeholder}\n                numberOfLines={10}\n                customStyles={styles.inputStyle}\n              />\n            </ListItem.Content>\n          </ListItem.Content>\n        )}\n\n        {isRow && (\n          <React.Fragment>\n            <ListItem.Content style={styles.rowContainer}>\n              <BaseText style={styles.txtLabel}>{label}</BaseText>\n              {required && <BaseText style={styles.required}>*</BaseText>}\n            </ListItem.Content>\n            <ListItem.Content style={styles.rowInputContainer}>\n              <FormInput\n                name={name}\n                placeholder={placeholder}\n                placeholderTextColor={theme.colors.primary}\n                numberOfLines={1}\n                style={styles.rowInput}\n                customStyles={styles.inputStyle}\n              />\n            </ListItem.Content>\n          </React.Fragment>\n        )}\n      </ListItem>\n    );\n  }\n);\n\nListInput.displayName = \"ListInput\";\n"]},"metadata":{},"sourceType":"module"}