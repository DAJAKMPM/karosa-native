{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nvar _jsxFileName = \"/Users/valiant.lamban/Downloads/karosa-native/src/screens/products/choose-category/index.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useCallback, useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { Header } from \"react-native-elements\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { theme } from \"../../../styles\";\nimport { Screen } from \"../../../components/base-screen\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { BaseText } from \"../../../components/base-text\";\nimport { useMemoizedSelector } from \"../../../hooks\";\nimport { actions as productActions } from \"../../../redux/shop\";\nimport { actions as categoryActions, selectors } from \"../../../redux/category\";\nimport { styles } from \"./styles\";\n\nvar ChooseCategoryScreen = function ChooseCategoryScreen() {\n  var dispatch = useDispatch();\n\n  var _useNavigation = useNavigation(),\n      goBack = _useNavigation.goBack;\n\n  var callCategoryListApi = useCallback(function () {\n    return dispatch(categoryActions.callCategoryListApi.request());\n  }, [dispatch]);\n  var setCategory = useCallback(function (values) {\n    return dispatch(productActions.setCategory(values));\n  }, [dispatch]);\n  var categories = useMemoizedSelector(selectors.getCategoryListResponse).response;\n  useEffect(function () {\n    callCategoryListApi();\n  }, []);\n  var screenProps = {\n    customHeader: React.createElement(Header, {\n      containerStyle: {\n        backgroundColor: \"transparent\"\n      },\n      leftComponent: {\n        icon: \"arrow-back\",\n        color: theme.colors.primary,\n        onPress: goBack\n      },\n      centerComponent: {\n        text: \"Choose Category\",\n        style: _objectSpread(_objectSpread({}, theme.textRegular), {}, {\n          fontWeight: \"700\",\n          alignSelf: \"center\"\n        })\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 7\n      }\n    }),\n    customStyles: styles.container\n  };\n\n  var categoryItem = function categoryItem(_ref) {\n    var item = _ref.item;\n    return React.createElement(View, {\n      style: styles.categoryContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 7\n      }\n    }, React.createElement(TouchableOpacity, {\n      onPress: function onPress() {\n        setCategory(item.id);\n        goBack();\n      },\n      style: styles.categoryCircle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }\n    }), React.createElement(View, {\n      style: styles.nameContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }\n    }, React.createElement(BaseText, {\n      style: styles.txtName,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }\n    }, item.name)));\n  };\n\n  return React.createElement(Screen, _extends({}, screenProps, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 5\n    }\n  }), React.createElement(FlatList, {\n    numColumns: 3,\n    data: categories,\n    keyExtractor: function keyExtractor(item) {\n      return String(item.id);\n    },\n    renderItem: categoryItem,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default ChooseCategoryScreen;","map":{"version":3,"sources":["/Users/valiant.lamban/Downloads/karosa-native/src/screens/products/choose-category/index.tsx"],"names":["React","useCallback","useEffect","useDispatch","Header","useNavigation","theme","Screen","BaseText","useMemoizedSelector","actions","productActions","categoryActions","selectors","styles","ChooseCategoryScreen","dispatch","goBack","callCategoryListApi","request","setCategory","values","categories","getCategoryListResponse","response","screenProps","customHeader","backgroundColor","icon","color","colors","primary","onPress","text","style","textRegular","fontWeight","alignSelf","customStyles","container","categoryItem","item","categoryContainer","id","categoryCircle","nameContainer","txtName","name","String"],"mappings":"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","sourcesContent":["import React, { useCallback, useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { Header } from \"react-native-elements\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { theme } from \"@app/styles\";\nimport { Screen } from \"@app/components/base-screen\";\nimport { Props as ScreenProps } from \"@app/components/base-screen/types\";\nimport { FlatList, TouchableOpacity, View } from \"react-native\";\nimport { BaseText } from \"@app/components/base-text\";\nimport { useMemoizedSelector } from \"@app/hooks\";\nimport { actions as productActions } from \"@app/redux/shop\";\nimport { actions as categoryActions, selectors } from \"@app/redux/category\";\nimport { Categories } from \"@app/redux/api-models/category-list\";\n\nimport { styles } from \"./styles\";\n\nconst ChooseCategoryScreen: React.FC = () => {\n  const dispatch = useDispatch();\n\n  const { goBack } = useNavigation();\n\n  const callCategoryListApi = useCallback(\n    () => dispatch(categoryActions.callCategoryListApi.request()),\n    [dispatch]\n  );\n\n  const setCategory = useCallback(\n    (values: number) => dispatch(productActions.setCategory(values)),\n    [dispatch]\n  );\n\n  const categories = useMemoizedSelector(selectors.getCategoryListResponse)\n    .response;\n\n  useEffect(() => {\n    callCategoryListApi();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const screenProps: ScreenProps = {\n    customHeader: (\n      <Header\n        containerStyle={{ backgroundColor: \"transparent\" }}\n        leftComponent={{\n          icon: \"arrow-back\",\n          color: theme.colors.primary,\n          onPress: goBack,\n        }}\n        centerComponent={{\n          text: \"Choose Category\",\n          style: {\n            ...theme.textRegular,\n            fontWeight: \"700\",\n            alignSelf: \"center\",\n          },\n        }}\n      />\n    ),\n    customStyles: styles.container,\n  };\n\n  const categoryItem = ({ item }: { item: Categories }) => {\n    return (\n      <View style={styles.categoryContainer}>\n        <TouchableOpacity\n          onPress={() => {\n            setCategory(item.id);\n            goBack();\n          }}\n          style={styles.categoryCircle}\n        />\n        <View style={styles.nameContainer}>\n          <BaseText style={styles.txtName}>{item.name}</BaseText>\n        </View>\n      </View>\n    );\n  };\n\n  return (\n    <Screen {...screenProps}>\n      <FlatList\n        numColumns={3}\n        data={categories}\n        keyExtractor={(item) => String(item.id)}\n        renderItem={categoryItem}\n      />\n    </Screen>\n  );\n};\n\nexport default ChooseCategoryScreen;\n"]},"metadata":{},"sourceType":"module"}