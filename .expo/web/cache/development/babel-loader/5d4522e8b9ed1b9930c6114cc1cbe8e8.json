{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nvar _jsxFileName = \"/Users/valiant.lamban/Downloads/karosa-native/src/screens/products/measurement/index.tsx\";\nimport React, { useCallback } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { useDispatch } from \"react-redux\";\nimport { FormikContext, useFormik } from \"formik\";\nimport { BottomSheet } from \"../../../components/bottom-sheet\";\nimport { BaseText } from \"../../../components/base-text\";\nimport { SubmitButton } from \"../../../components/formik/submit-button\";\nimport { useMemoizedSelector } from \"../../../hooks\";\nimport { actions, selectors } from \"../../../redux/shop\";\nimport { FormRadioGroup } from \"../../../components/formik/form-radio-group\";\nimport { styles } from \"./styles\";\n\nvar MeasurementModal = function MeasurementModal(_ref) {\n  var sheetRef = _ref.sheetRef;\n  var dispatch = useDispatch();\n  var setProductMeasurement = useCallback(function (value) {\n    return dispatch(actions.setProductMeasurement(value));\n  }, [dispatch]);\n  var productMeasurement = useMemoizedSelector(selectors.getProductMeasurement);\n  var formikBag = useFormik({\n    initialValues: {\n      measurement: productMeasurement\n    },\n    onSubmit: function onSubmit(values) {\n      var _sheetRef$current;\n\n      setProductMeasurement(values.measurement);\n      (_sheetRef$current = sheetRef.current) == null ? void 0 : _sheetRef$current.close();\n    }\n  });\n  var radioOptions = [{\n    id: \"1\",\n    label: \"Grams\"\n  }, {\n    id: \"2\",\n    label: \"Kilograms\"\n  }, {\n    id: \"3\",\n    label: \"Piece\"\n  }];\n  var doneButtonProps = {\n    title: \"Done\"\n  };\n  return React.createElement(FormikContext.Provider, {\n    value: formikBag,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }\n  }, React.createElement(BottomSheet, {\n    height: 328,\n    ref: sheetRef,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }, React.createElement(BaseText, {\n    style: styles.txtProductStatus,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, \"Unit of Measurement\"), React.createElement(View, {\n    style: styles.spacer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }), React.createElement(FormRadioGroup, {\n    name: \"measurement\",\n    options: radioOptions,\n    hasSeparator: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }), React.createElement(View, {\n    style: styles.buttonContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, React.createElement(SubmitButton, _extends({}, doneButtonProps, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 11\n    }\n  })))));\n};\n\nexport default MeasurementModal;","map":{"version":3,"sources":["/Users/valiant.lamban/Downloads/karosa-native/src/screens/products/measurement/index.tsx"],"names":["React","useCallback","useDispatch","FormikContext","useFormik","BottomSheet","BaseText","SubmitButton","useMemoizedSelector","actions","selectors","FormRadioGroup","styles","MeasurementModal","sheetRef","dispatch","setProductMeasurement","value","productMeasurement","getProductMeasurement","formikBag","initialValues","measurement","onSubmit","values","current","close","radioOptions","id","label","doneButtonProps","title","txtProductStatus","spacer","buttonContainer"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,WAAhB,QAAmC,OAAnC;;AAEA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,aAAT,EAAwBC,SAAxB,QAAyC,QAAzC;AACA,SAASC,WAAT;AACA,SAASC,QAAT;AACA,SAASC,YAAT;AAEA,SAASC,mBAAT;AACA,SAASC,OAAT,EAAkBC,SAAlB;AACA,SAASC,cAAT;AAGA,SAASC,MAAT;;AAEA,IAAMC,gBAAiC,GAAG,SAApCA,gBAAoC,OAAkB;AAAA,MAAfC,QAAe,QAAfA,QAAe;AAC1D,MAAMC,QAAQ,GAAGb,WAAW,EAA5B;AAEA,MAAMc,qBAAqB,GAAGf,WAAW,CACvC,UAACgB,KAAD;AAAA,WAAmBF,QAAQ,CAACN,OAAO,CAACO,qBAAR,CAA8BC,KAA9B,CAAD,CAA3B;AAAA,GADuC,EAEvC,CAACF,QAAD,CAFuC,CAAzC;AAKA,MAAMG,kBAAkB,GAAGV,mBAAmB,CAC5CE,SAAS,CAACS,qBADkC,CAA9C;AAIA,MAAMC,SAAS,GAAGhB,SAAS,CAAC;AAC1BiB,IAAAA,aAAa,EAAE;AAAEC,MAAAA,WAAW,EAAEJ;AAAf,KADW;AAE1BK,IAAAA,QAAQ,EAAE,kBAACC,MAAD,EAAY;AAAA;;AACpBR,MAAAA,qBAAqB,CAACQ,MAAM,CAACF,WAAR,CAArB;AACA,2BAAAR,QAAQ,CAACW,OAAT,uCAAkBC,KAAlB;AACD;AALyB,GAAD,CAA3B;AAQA,MAAMC,YAAY,GAAG,CACnB;AACEC,IAAAA,EAAE,EAAE,GADN;AAEEC,IAAAA,KAAK,EAAE;AAFT,GADmB,EAKnB;AACED,IAAAA,EAAE,EAAE,GADN;AAEEC,IAAAA,KAAK,EAAE;AAFT,GALmB,EASnB;AACED,IAAAA,EAAE,EAAE,GADN;AAEEC,IAAAA,KAAK,EAAE;AAFT,GATmB,CAArB;AAeA,MAAMC,eAAkC,GAAG;AACzCC,IAAAA,KAAK,EAAE;AADkC,GAA3C;AAIA,SACE,oBAAC,aAAD,CAAe,QAAf;AAAwB,IAAA,KAAK,EAAEX,SAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,WAAD;AAAa,IAAA,MAAM,EAAE,GAArB;AAA0B,IAAA,GAAG,EAAEN,QAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAEF,MAAM,CAACoB,gBAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADF,EAEE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEpB,MAAM,CAACqB,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAIE,oBAAC,cAAD;AACE,IAAA,IAAI,EAAE,aADR;AAEE,IAAA,OAAO,EAAEN,YAFX;AAGE,IAAA,YAAY,MAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,EAUE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEf,MAAM,CAACsB,eAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,YAAD,eAAkBJ,eAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF,CAVF,CADF,CADF;AAkBD,CAzDD;;AA2DA,eAAejB,gBAAf","sourcesContent":["import React, { useCallback } from \"react\";\nimport { View } from \"react-native\";\nimport { useDispatch } from \"react-redux\";\nimport { FormikContext, useFormik } from \"formik\";\nimport { BottomSheet } from \"@app/components/bottom-sheet\";\nimport { BaseText } from \"@app/components/base-text\";\nimport { SubmitButton } from \"@app/components/formik/submit-button\";\nimport { Props as SubmitButtonProps } from \"@app/components/formik/submit-button/types\";\nimport { useMemoizedSelector } from \"@app/hooks\";\nimport { actions, selectors } from \"@app/redux/shop\";\nimport { FormRadioGroup } from \"@app/components/formik/form-radio-group\";\n\nimport { Props } from \"./types\";\nimport { styles } from \"./styles\";\n\nconst MeasurementModal: React.FC<Props> = ({ sheetRef }) => {\n  const dispatch = useDispatch();\n\n  const setProductMeasurement = useCallback(\n    (value: string) => dispatch(actions.setProductMeasurement(value)),\n    [dispatch]\n  );\n\n  const productMeasurement = useMemoizedSelector(\n    selectors.getProductMeasurement\n  );\n\n  const formikBag = useFormik({\n    initialValues: { measurement: productMeasurement },\n    onSubmit: (values) => {\n      setProductMeasurement(values.measurement);\n      sheetRef.current?.close();\n    },\n  });\n\n  const radioOptions = [\n    {\n      id: \"1\",\n      label: \"Grams\",\n    },\n    {\n      id: \"2\",\n      label: \"Kilograms\",\n    },\n    {\n      id: \"3\",\n      label: \"Piece\",\n    },\n  ];\n\n  const doneButtonProps: SubmitButtonProps = {\n    title: \"Done\",\n  };\n\n  return (\n    <FormikContext.Provider value={formikBag}>\n      <BottomSheet height={328} ref={sheetRef}>\n        <BaseText style={styles.txtProductStatus}>Unit of Measurement</BaseText>\n        <View style={styles.spacer} />\n\n        <FormRadioGroup\n          name={\"measurement\"}\n          options={radioOptions}\n          hasSeparator\n        />\n\n        <View style={styles.buttonContainer}>\n          <SubmitButton {...doneButtonProps} />\n        </View>\n      </BottomSheet>\n    </FormikContext.Provider>\n  );\n};\n\nexport default MeasurementModal;\n"]},"metadata":{},"sourceType":"module"}